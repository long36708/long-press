import{_ as l,a as p,b as e}from"./chunks/PageInfo.vue_vue_type_script_setup_true_lang.BCVHfIj7.js";import{_ as t,c as h,I as s,a7 as k,o as r}from"./chunks/framework.DGCt2JJv.js";import"./chunks/dayjs.min.DZyl58SH.js";const v=JSON.parse('{"title":"制作 npm 第三方库","description":"","frontmatter":{},"headers":[],"relativePath":"guide/制作npm第三方库.md","filePath":"guide/制作npm第三方库.md","lastUpdated":1718983236000}'),d={name:"guide/制作npm第三方库.md"},c=k(`<h1 id="制作-npm-第三方库" tabindex="-1">制作 npm 第三方库 <a class="header-anchor" href="#制作-npm-第三方库" aria-label="Permalink to &quot;制作 npm 第三方库&quot;">​</a></h1><h2 id="初始化项目" tabindex="-1">初始化项目 <a class="header-anchor" href="#初始化项目" aria-label="Permalink to &quot;初始化项目&quot;">​</a></h2><p>使用npm init命令新建一个 npm 项目，这将生成一个package.json文件，用于定义项目的元数据和依赖项。</p><p>在根目录下新建src目录用于存放源码文件。</p><p>在src目录下新建<strong>tests</strong>目录用于存放测试文件。</p><h2 id="安装-typescript" tabindex="-1">安装 Typescript <a class="header-anchor" href="#安装-typescript" aria-label="Permalink to &quot;安装 Typescript&quot;">​</a></h2><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> --save-dev</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> typescript</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> @types/node</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>在根目录下创建一个tsconfig.json文件来配置 Typescript 编译选项：</p><div class="language-json5 vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json5</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">	&quot;compilerOptions&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">		&quot;outDir&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&quot;dist&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">		&quot;module&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&quot;ESNext&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">		&quot;target&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&quot;ES5&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">		&quot;declaration&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">		// 生成类型声明文件</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">		&quot;strict&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;">true</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">	},</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">	&quot;include&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: [</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">		&quot;src/**/*&quot;</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">	],</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">	&quot;exclude&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: [</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">		&quot;node_modules&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">		&quot;**/__tests__/*&quot;</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">	]</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="使用-rollup-打包" tabindex="-1">使用 rollup 打包 <a class="header-anchor" href="#使用-rollup-打包" aria-label="Permalink to &quot;使用 rollup 打包&quot;">​</a></h2><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> --save-dev</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> rollup</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> @rollup/plugin-typescript</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>在根目录下创建一个名为rollup.config.js的文件，用于配置 rollup 打包选项：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#AF00DB;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;"> typescript</span><span style="--shiki-light:#AF00DB;--shiki-dark:#C678DD;"> from</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;@rollup/plugin-typescript&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AF00DB;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#AF00DB;--shiki-dark:#C678DD;"> default</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">  input</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;src/index.ts&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 入口文件</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">  output</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> [</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">    {</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">      file</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;dist/bundle.cjs.js&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// CommonJS 格式的输出</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">      format</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;cjs&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">    },</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">    {</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">      file</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;dist/bundle.esm.js&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// ES 模块格式的输出</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">      format</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;esm&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">    },</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">  ],</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">  plugins</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> [</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">    typescript</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">(), </span><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 使用 TypeScript 插件</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">  ],</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>在package.json文件中添加&quot;type&quot;: &quot;module&quot;，以指示 NodeJS 将 js 文件视为 ES 模块。</p><h2 id="合并类型声明文件" tabindex="-1">合并类型声明文件 <a class="header-anchor" href="#合并类型声明文件" aria-label="Permalink to &quot;合并类型声明文件&quot;">​</a></h2><p>安装rollup-plugin-dts插件用于合并类型声明文件：</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> --save-dev</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> rollup-plugin-dts</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>修改tsconfig.json文件：</p><div class="language-json5 vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json5</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">	&quot;compilerOptions&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">		// ...</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">		&quot;declaration&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">		&quot;declarationDir&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&quot;./dist/types&quot;</span></span>
<span class="line"><span style="--shiki-light:#CD3131;--shiki-dark:#FFFFFF;">		//</span><span style="--shiki-light:#CD3131;--shiki-dark:#FFFFFF;"> 指定类型声明文件的输出目录</span></span>
<span class="line"><span style="--shiki-light:#CD3131;--shiki-dark:#FFFFFF;">		//</span><span style="--shiki-light:#CD3131;--shiki-dark:#FFFFFF;"> ...</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">	}</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>修改rollup.config.js文件：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#AF00DB;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;"> dts</span><span style="--shiki-light:#AF00DB;--shiki-dark:#C678DD;"> from</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;rollup-plugin-dts&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#AF00DB;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#AF00DB;--shiki-dark:#C678DD;"> default</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> [</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">  {</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">    // ...</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">  },</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">  /* 单独生成声明文件 */</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">  {</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">    input</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;dist/types/index.d.ts&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">    output</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> [{ </span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">file</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;dist/index.d.ts&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">format</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;es&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> }],</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">    plugins</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">dts</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">()],</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">  },</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="添加构建命令" tabindex="-1">添加构建命令 <a class="header-anchor" href="#添加构建命令" aria-label="Permalink to &quot;添加构建命令&quot;">​</a></h2><p>安装rimraf用于在构建前清除dist目录:</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> --save-dev</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> rimraf</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>在package.json文件中添加构建命令：</p><div class="language-json5 vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json5</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">	&quot;scripts&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">		&quot;clean&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&quot;rimraf dist&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">		&quot;build&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&quot;npm run clean &amp;&amp; rollup -c&quot;</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">	}</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>当执行npm run build命令时，会先清理dist目录，然后使用 rollup 打包。</p><h2 id="使用-jest-编写测试" tabindex="-1">使用 jest 编写测试 <a class="header-anchor" href="#使用-jest-编写测试" aria-label="Permalink to &quot;使用 jest 编写测试&quot;">​</a></h2><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> --save-dev</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> jest</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> ts-jest</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> @types/jest</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>在根目录下创建一个名为jest.config.js的文件，用于配置 jest 测试选项：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#AF00DB;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#AF00DB;--shiki-dark:#C678DD;"> default</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">  testTimeout</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#098658;--shiki-dark:#D19A66;"> 30000</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 设置测试超时时间</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">  preset</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;ts-jest&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">  testEnvironment</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;node&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">  collectCoverage</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 开启测试覆盖率</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">  coverageDirectory</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;coverage&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 指定覆盖率报告输出目录</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">  collectCoverageFrom</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> [ </span><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 指定需要收集覆盖率的文件</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">    &#39;src/**/*.ts&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 包括 src 目录下所有的 TypeScript 文件</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">    &#39;!src/**/*.d.ts&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 排除 TypeScript 声明文件</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">    &#39;!src/__tests__/**/*.ts&#39;</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">  ],</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">  testMatch</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&#39;&lt;rootDir&gt;/src/__tests__/*.test.ts&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">], </span><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 指定测试文件的匹配规则</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">  testPathIgnorePatterns</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> [] </span><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 指定需要忽略的测试文件</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>在src/tests目录下创建测试用例</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// example.test.ts</span></span>
<span class="line"><span style="--shiki-light:#AF00DB;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">yourFunction</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> } </span><span style="--shiki-light:#AF00DB;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;./yourModule&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">test</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&#39;description of your test&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">, () </span><span style="--shiki-light:#0000FF;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">  expect</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">yourFunction</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">()).</span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">toBe</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">/* expected result */</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>在package.json文件中添加测试命令：</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#E06C75;">	&quot;scripts&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#E06C75;">		&quot;test&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&quot;jest --coverage&quot;</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">	}</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>使用npm run test命令执行测试，并在指定的coverage目录中会生成测试覆盖率报告。</p><h2 id="构建-npm-库" tabindex="-1">构建 npm 库 <a class="header-anchor" href="#构建-npm-库" aria-label="Permalink to &quot;构建 npm 库&quot;">​</a></h2><p>首先确保在package.json文件中添加</p><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>- &quot;main&quot;: &quot;dist/bundle.cjs.js&quot;指向CommonJS版本的入口点。</span></span>
<span class="line"><span>- &quot;module&quot;: &quot;dist/bundle.esm.js&quot;指向ES模块版本的入口点。</span></span>
<span class="line"><span>- &quot;types&quot;: &quot;dist/index.d.ts&quot;指向类型声明文件。</span></span>
<span class="line"><span>- &quot;files&quot;: [&quot;dist&quot;]指定发布的文件。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>然后在每次发布前先执行npm run build命令构建最新版本的库，再手动修改package.json文件中的version字段。遵循语义化版本控制。</p><h2 id="测试构建后的库" tabindex="-1">测试构建后的库 <a class="header-anchor" href="#测试构建后的库" aria-label="Permalink to &quot;测试构建后的库&quot;">​</a></h2><p>在根目录下执行<code>npm pack</code>命令，将会在根目录下生成一个<code>\\*.tgz</code>文件，然后在另一个项目中使用<code>npm install &lt;path-to-tgz-file&gt;</code>命令安装该库。</p><h2 id="发布-npm-库" tabindex="-1">发布 npm 库 <a class="header-anchor" href="#发布-npm-库" aria-label="Permalink to &quot;发布 npm 库&quot;">​</a></h2><p>使用<code>npm login</code>命令登录到公共镜像仓库， 如果是私有镜像仓库，可以在根目录下新建.npmrc文件，添加registry字段指向私有镜像仓库地址，例如：registry=<a href="https://npm.example.com" target="_blank" rel="noreferrer">https://npm.example.com</a>。</p><p>最后使用<code>npm publish</code>命令发布 npm 库。</p><h2 id="自动发布" tabindex="-1">自动发布 <a class="header-anchor" href="#自动发布" aria-label="Permalink to &quot;自动发布&quot;">​</a></h2><p>首先在 npm 账户中生成一个新的访问令牌，并添加到 Github 仓库的 Actions Secrets 中。</p><p>在项目根目录的<code>.github/workflows</code>目录下创建一个名为<code>publish.yml</code>的文件， 用于配置 Github Actions，并确保在每次发布前更新package.json文件中的version版本。</p><div class="language-yaml vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#800000;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#98C379;">Publish npm package</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;">on</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#E06C75;">  push</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#E06C75;">    branches</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#0000FF;--shiki-dark:#98C379;">publish</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#E06C75;">jobs</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#E06C75;">  publish</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#E06C75;">    runs-on</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#98C379;">ubuntu-latest</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#E06C75;">    steps</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#800000;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#98C379;">Checkout code</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#E06C75;">        uses</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#98C379;">actions/checkout@v2</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#800000;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#98C379;">Set up Node.js</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#E06C75;">        uses</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#98C379;">actions/setup-node@v2</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#E06C75;">        with</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#E06C75;">          node-version</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#098658;--shiki-dark:#D19A66;">18</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#E06C75;">          registry-url</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#98C379;">&#39;https://registry.npmjs.org&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#800000;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#98C379;">Install dependencies</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#E06C75;">        run</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#98C379;">npm install</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#800000;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#98C379;">Build package</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#E06C75;">        run</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#98C379;">npm run build</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">      - </span><span style="--shiki-light:#800000;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#98C379;">Publish to npm</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#E06C75;">        run</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#98C379;">npm publish</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#E06C75;">        env</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#E06C75;">          NODE_AUTH_TOKEN</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#0000FF;--shiki-dark:#98C379;">\${{ secrets.NPM_TOKEN }}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><h2 id="contributors" tabindex="-1">Contributors <a class="header-anchor" href="#contributors" aria-label="Permalink to &quot;Contributors&quot;">​</a></h2>`,50);function o(g,u,B,y,b,m){const i=l,a=p,n=e;return r(),h("div",null,[c,s(i,{readTime:"4",words:"1.1k"}),s(a),s(n)])}const E=t(d,[["render",o]]);export{v as __pageData,E as default};
