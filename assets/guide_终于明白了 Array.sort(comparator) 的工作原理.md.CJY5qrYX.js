import{_ as r,a as i,b as o}from"./chunks/PageInfo.vue_vue_type_script_setup_true_lang.BCVHfIj7.js";import{_ as n,c as p,I as e,a7 as h,o as l}from"./chunks/framework.DGCt2JJv.js";import"./chunks/dayjs.min.DZyl58SH.js";const B=JSON.parse('{"title":"终于明白了 Array.sort(comparator) 的工作原理","description":"","frontmatter":{},"headers":[],"relativePath":"guide/终于明白了 Array.sort(comparator) 的工作原理.md","filePath":"guide/终于明白了 Array.sort(comparator) 的工作原理.md","lastUpdated":1715494022000}'),c={name:"guide/终于明白了 Array.sort(comparator) 的工作原理.md"},m=h(`<h1 id="终于明白了-array-sort-comparator-的工作原理" tabindex="-1">终于明白了 Array.sort(comparator) 的工作原理 <a class="header-anchor" href="#终于明白了-array-sort-comparator-的工作原理" aria-label="Permalink to &quot;终于明白了 Array.sort(comparator) 的工作原理&quot;">​</a></h1><p>原文地址： <a href="https://www.jameskerr.blog/posts/javascript-sort-comparators/" target="_blank" rel="noreferrer">https://www.jameskerr.blog/posts/javascript-sort-comparators/</a></p><p>After 13 years of JavaScript, I finally have a way to remember how the comparator function in Array.sort() works.</p><p>使用 JavaScript 13 年之后，我终于有办法记住 Array.sort() 中的比较器函数是如何工作的。</p><p>I think the trouble is that all the examples use this shorthand syntax. 我认为问题在于所有示例都使用这种缩写语法。</p><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E5C07B;">array</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">sort</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">((</span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">a</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">b</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#0000FF;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;"> a</span><span style="--shiki-light:#000000;--shiki-dark:#56B6C2;"> -</span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;"> b</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">); </span><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// too hard for me</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>This is beyond confusing for me. 这让我很困惑。</p><p>In the past, I would just try b - a then try a - b and pick which one gave me the result I wanted. 在过去，我只是尝试 <code>b - a</code> 然后尝试 <code>a - b</code>,之后 选择一个给了我我想要的结果的那种写法。</p><p>But now I have a mental model simple enough for me to remember. 但现在我有了一个简单易记的心理模型。</p><p>First, the sole purpose of the comparator function is to answer this quesions: 首先，比较器函数的唯一目的是回答这个问题：</p><p>Where should “a” be placed in the new sorted array? To the left of “b” or to the right? “a”应该放在新排序数组中的什么位置？ 在“b”的左边还是右边？</p><p>The arguments passed to the comparator function are usually named a and b. 传递给比较器函数的参数通常命名为a和b。</p><p>This makes sense to me, since the first arg comes before the second arg, and a comes before b in the English alphabet. 这对我来说很有意义，因为第一个参数位于第二个参数之前，并且在英语字母表中a位于b之前</p><p>These arguments represent two items in the array. 这些参数代表数组中的两个项目。</p><p>Now let’s think about the return value. 现在让我们考虑一下返回值。</p><p>The function must return a number. 该函数必须返回一个数字。</p><p>Numbers exist on a number line going from left to right just like the items in an array. 数字存在于从左到右的数轴上，就像数组中的item项一样。</p><p>The negative numbers are on the left, zero is in the middle, and the positive numbers on the right. 负数在左边，零在中间，正数在右边。</p><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>-3   -2   -1   0   1   2   3</span></span>
<span class="line"><span>----------------------------</span></span>
<span class="line"><span>    a good ol&#39; number line</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>So check it out, if your comparator function returns a negative number, the first argument a will come first, before b. 所以检查一下，如果你的比较器函数返回一个负数，第一个参数a将出现在b之前。</p><p>Just like negative numbers on the number line come first! 就像数轴上的负数先出现一样！</p><p>If the function returns a positive number, the first argument a will come after b. 如果函数返回正数，则第一个参数a将在b后面。</p><p>The a item will be on the “right” side of of b, just like the positive numbers are on the “right” side of the number line! 该a项目将位于b 的“右侧” ，就像正数位于数轴的“右侧”一样！</p><p>If the function returns 0, there will be no change to the existing order of the elements. 如果函数返回 0，则元素的现有顺序不会改变。</p><p>This one was pretty easy to remember. 这个很容易记住。</p><p>To summarize, we just want to find out where a goes. Does it go to the left or right of b. 总而言之，我们只是想弄清楚a是要放在b的左边还是右边。</p><p>Negative means left, positive means right. 负数表示左，正数表示右。</p><p>Number line. Left to right. 数轴上 从左到右。</p><p>The “left-to-right-ness” of the number line, the items in an array, the alphabet, and the positional arguments all finally clicked for me today. 从左到右的数轴、数组中的项、字母表和位置参数 这些，今天，终于让我明白了 array.sort(comparator) 是如何工作的。</p><p>Maybe this will click for you too and you can save yourself 13 years of googling “How does array.sort(comparator) work again?”. 也许这也会适合你，你可以节省 13 年的时间去谷歌搜索“ array.sort(comparator) 是如何工作的？”。</p><h2 id="contributors" tabindex="-1">Contributors <a class="header-anchor" href="#contributors" aria-label="Permalink to &quot;Contributors&quot;">​</a></h2>`,31);function d(u,b,k,f,g,y){const a=r,t=i,s=o;return l(),p("div",null,[m,e(a,{readTime:"4",words:"943"}),e(t),e(s)])}const A=n(c,[["render",d]]);export{B as __pageData,A as default};
