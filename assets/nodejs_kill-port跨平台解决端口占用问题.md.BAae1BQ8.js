import{_ as l,a as p,b as t}from"./chunks/PageInfo.vue_vue_type_script_setup_true_lang.BCVHfIj7.js";import{_ as h,c as k,I as s,a7 as e,o as r}from"./chunks/framework.DGCt2JJv.js";import"./chunks/dayjs.min.DZyl58SH.js";const E=JSON.parse('{"title":"kill-port，跨平台解决端口占用问题","description":"","frontmatter":{},"headers":[],"relativePath":"nodejs/kill-port跨平台解决端口占用问题.md","filePath":"nodejs/kill-port跨平台解决端口占用问题.md","lastUpdated":1715494022000}'),d={name:"nodejs/kill-port跨平台解决端口占用问题.md"},o=e(`<h1 id="kill-port-跨平台解决端口占用问题" tabindex="-1">kill-port，跨平台解决端口占用问题 <a class="header-anchor" href="#kill-port-跨平台解决端口占用问题" aria-label="Permalink to &quot;kill-port，跨平台解决端口占用问题&quot;">​</a></h1><p><a href="https://blog.csdn.net/tiven_/article/details/134187409?spm=1001.2014.3001.5502" target="_blank" rel="noreferrer">https://blog.csdn.net/tiven_/article/details/134187409?spm=1001.2014.3001.5502</a></p><p>在日常开发中，<a href="https://so.csdn.net/so/search?q=%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8%E9%97%AE%E9%A2%98&amp;spm=1001.2101.3001.7020" target="_blank" rel="noreferrer">端口占用问题</a> 一直是令人头疼的难题。为了更高效地管理端口资源，开发者们经常需要一种快速而可靠的解决方案。在这方面，<code>kill-port</code> 的出现为我们提供了一种强大而便捷的工具。本篇博客将深入介绍 <code>kill-port</code> 解决端口占用问题的优势，以及如何安装使用 <code>kill-port</code>。</p><h3 id="一、与传统解决方案的比较" tabindex="-1">一、与传统解决方案的比较 <a class="header-anchor" href="#一、与传统解决方案的比较" aria-label="Permalink to &quot;一、与传统解决方案的比较&quot;">​</a></h3><ol><li>手动查找和终止：传统方法中，开发者通常需要手动查找占用指定端口的进程，并手动终止它们。这种方法繁琐而容易出错，而且对于大规模开发环境来说，效率较低。</li><li>操作系统工具：某些操作系统提供了一些端口管理工具，但它们的使用复杂，而且在跨平台场景下存在兼容性问题。kill-port通过简化这个过程，提供了更一致、更便捷的解决方案。</li><li>代码嵌入：一些开发者可能选择在代码中嵌入端口检测和终止的逻辑，但这样会增加代码复杂性，而且不够灵活。kill-port通过独立的工具，使得端口管理与业务逻辑分离，更符合良好的软件设计原则。</li></ol><h3 id="二、kill-port的跨平台优势" tabindex="-1">二、kill-port的跨平台优势 <a class="header-anchor" href="#二、kill-port的跨平台优势" aria-label="Permalink to &quot;二、kill-port的跨平台优势&quot;">​</a></h3><ol><li></li></ol><p>操作系统无关性：kill-port设计之初就考虑了跨平台兼容性，使其能够在不同的操作系统上运行，包括Windows、Linux和macOS等。这种无关性使得开发者能够在不同的开发环境中使用相同的解决方案，无需为不同的平台编写不同的代码。</p><ol start="2"><li>自动适应性：由于操作系统之间存在一些差异，特别是在命令行和进程管理方面，kill-port通过自动适应性的设计，确保在不同平台上的一致性表现。这意味着开发者可以更专注于业务逻辑，而不必过多考虑平台间的差异。</li><li>广泛支持：kill-port通过npm、yarn和pnpm等包管理工具进行安装，这些工具本身也是跨平台的。这意味着，无论你使用的是哪种操作系统，都可以轻松安装和集成kill-port到你的项目中，使其成为跨平台开发环境中的理想选择。</li><li>命令行一致性：CLI是kill-port强大功能之一，而且在不同的操作系统上，CLI的使用方式保持一致。这种一致性简化了开发者的学习成本，使其能够更轻松地在不同平台上使用相同的命令，提高了工作效率。</li><li>支持TCP和UDP协议：与传统的端口解决方案相比，kill-port的一个显著优势在于它不仅支持TCP协议，还可以处理UDP协议。这使得它更加灵活，能够满足更多场景下的需求。</li></ol><h3 id="三、安装-kill-port" tabindex="-1">三、安装 kill-port <a class="header-anchor" href="#三、安装-kill-port" aria-label="Permalink to &quot;三、安装 kill-port&quot;">​</a></h3><p>首先，我们需要通过<a href="https://so.csdn.net/so/search?q=npm&amp;spm=1001.2101.3001.7020" target="_blank" rel="noreferrer">npm</a>、yarn或者pnpm进行安装，具体命令如下：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 使用npm安装 npm install --save kill-port # 使用yarn安装 yarn add kill-port # 使用pnpm安装 pnpm add kill-port</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="四、使用-kill-port" tabindex="-1">四、使用 kill-port <a class="header-anchor" href="#四、使用-kill-port" aria-label="Permalink to &quot;四、使用 kill-port&quot;">​</a></h3><p>kill-port的API非常简单，它导出了一个函数，该函数接受一个端口号作为参数，并返回一个Promise。通过这个函数，你可以轻松地终止指定端口上的进程。</p><p>kill-port提供了简单而强大的接口，让你能够轻松地终止占用指定端口的进程。以下是一个简单的使用示例：</p><div class="language-javascript vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#0070C1;--shiki-dark:#E5C07B;"> kill</span><span style="--shiki-light:#000000;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;"> require</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&#39;kill-port&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#0070C1;--shiki-dark:#E5C07B;"> http</span><span style="--shiki-light:#000000;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;"> require</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&#39;http&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#0070C1;--shiki-dark:#E5C07B;"> port</span><span style="--shiki-light:#000000;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#098658;--shiki-dark:#D19A66;"> 8080</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#0070C1;--shiki-dark:#E5C07B;"> server</span><span style="--shiki-light:#000000;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#001080;--shiki-dark:#E5C07B;"> http</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">createServer</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">((</span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">req</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">res</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#0000FF;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E5C07B;">	res</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">writeHead</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#098658;--shiki-dark:#D19A66;">200</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">, { </span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&#39;Content-Type&#39;</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;text/plain&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> });</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E5C07B;">	res</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">end</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&#39;Hi!&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">});</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E5C07B;">server</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">listen</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">port</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">, () </span><span style="--shiki-light:#0000FF;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">	setTimeout</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">(() </span><span style="--shiki-light:#0000FF;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">		// 使用kill-port终止运行在TCP协议上的端口 </span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">		kill</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">port</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&#39;tcp&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">then</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#001080;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">log</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">catch</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#001080;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">log</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">	}, </span><span style="--shiki-light:#098658;--shiki-dark:#D19A66;">1000</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h3 id="五、命令行-cli-使用" tabindex="-1">五、命令行 CLI 使用 <a class="header-anchor" href="#五、命令行-cli-使用" aria-label="Permalink to &quot;五、命令行 CLI 使用&quot;">​</a></h3><p>除了提供API，kill-port还可以作为全局包使用，通过CLI方式操作。你可以全局安装kill-port，然后使用以下命令：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 全局安装 </span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> --global</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> kill-port</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># OR </span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> i</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> -g</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> kill-port</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>然后，你可以通过命令行终止指定端口上的进程：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">kill-port</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> --port</span><span style="--shiki-light:#098658;--shiki-dark:#D19A66;"> 8080</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># OR </span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">kill-port</span><span style="--shiki-light:#098658;--shiki-dark:#D19A66;"> 9000</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># OR 使用UDP </span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">kill-port</span><span style="--shiki-light:#098658;--shiki-dark:#D19A66;"> 9000</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> --method</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> udp</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 终止多个端口 </span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">kill-port</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> --port</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> 8080,5000,3000</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># OR </span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">kill-port</span><span style="--shiki-light:#098658;--shiki-dark:#D19A66;"> 9000</span><span style="--shiki-light:#098658;--shiki-dark:#D19A66;"> 3000</span><span style="--shiki-light:#098658;--shiki-dark:#D19A66;"> 5000</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>另外，你还可以使用npx在不安装的情况下直接运行kill-port：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 终止单个端口 </span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">npx</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> kill-port</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> --port</span><span style="--shiki-light:#098658;--shiki-dark:#D19A66;"> 8080</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> npx</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> kill-port</span><span style="--shiki-light:#098658;--shiki-dark:#D19A66;"> 8080</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 使用UDP </span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">npx</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> kill-port</span><span style="--shiki-light:#098658;--shiki-dark:#D19A66;"> 9000</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> --method</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> udp</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 终止多个端口 </span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">npx</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> kill-port</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> --port</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> 8080,5000,3000</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">npx</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> kill-port</span><span style="--shiki-light:#098658;--shiki-dark:#D19A66;"> 9000</span><span style="--shiki-light:#098658;--shiki-dark:#D19A66;"> 3000</span><span style="--shiki-light:#098658;--shiki-dark:#D19A66;"> 5000</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="六、总结" tabindex="-1">六、总结 <a class="header-anchor" href="#六、总结" aria-label="Permalink to &quot;六、总结&quot;">​</a></h3><p>kill-port作为一个强大的端口管理工具，为开发者提供了简单、高效的解决方案，从而在开发过程中更好地应对端口占用的问题。</p><p>与传统解决方案相比，它通过简化操作、支持异步和跨平台，以及提供丰富的功能，展现出明显的优势。</p><p>在今后的开发中，合理利用kill-port将带来更好的开发体验和更高的效率。</p><p>参考文档：<a href="https://www.npmjs.com/package/kill-port" target="_blank" rel="noreferrer">https://www.npmjs.com/package/kill-port</a></p><h1 id="wait-port" tabindex="-1">wait-port <a class="header-anchor" href="#wait-port" aria-label="Permalink to &quot;wait-port&quot;">​</a></h1><p>Simple binary to wait for a port to open. Useful when writing scripts which need to wait for a server to be available. 等待端口打开的简单二进制文件。在编写需要等待服务器可用的脚本时很有用。</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#0070C1;--shiki-dark:#E5C07B;"> waitPort</span><span style="--shiki-light:#000000;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;"> require</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&#39;wait-port&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#0070C1;--shiki-dark:#E5C07B;"> params</span><span style="--shiki-light:#000000;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">	host</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;google.com&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">	port</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#098658;--shiki-dark:#D19A66;"> 443</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">};</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">waitPort</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">params</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">	.</span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">then</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">(({ </span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">open</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">ipVersion</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> }) </span><span style="--shiki-light:#0000FF;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#AF00DB;--shiki-dark:#C678DD;">		if</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">open</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">) </span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">\`The port is now open on IPv</span><span style="--shiki-light:#0000FF;--shiki-dark:#C678DD;">\${</span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">ipVersion</span><span style="--shiki-light:#0000FF;--shiki-dark:#C678DD;">}</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">!\`</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#AF00DB;--shiki-dark:#C678DD;">		else</span><span style="--shiki-light:#001080;--shiki-dark:#E5C07B;"> console</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&#39;The port did not open before the timeout...&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">	})</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">	.</span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">catch</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">((</span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">err</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#0000FF;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E5C07B;">		console</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">err</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">\`An unknown error occured while waiting for the port: </span><span style="--shiki-light:#0000FF;--shiki-dark:#C678DD;">\${</span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">err</span><span style="--shiki-light:#0000FF;--shiki-dark:#C678DD;">}</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">	});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="contributors" tabindex="-1">Contributors <a class="header-anchor" href="#contributors" aria-label="Permalink to &quot;Contributors&quot;">​</a></h2>`,32);function g(c,y,B,F,b,A){const i=l,a=p,n=t;return r(),k("div",null,[o,s(i,{readTime:"5",words:"1.5k"}),s(a),s(n)])}const f=h(d,[["render",g]]);export{E as __pageData,f as default};
