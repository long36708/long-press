import{_ as i,a as l,b as t}from"./chunks/PageInfo.vue_vue_type_script_setup_true_lang.BCVHfIj7.js";import{_ as o,c as p,I as s,a7 as d,o as r}from"./chunks/framework.DGCt2JJv.js";import"./chunks/dayjs.min.DZyl58SH.js";const h="/long-press/assets/f6faaa91.DkjBvKRD.png",c="/long-press/assets/df5cb4f1.DnyIf_Es.png",E=JSON.parse('{"title":"使用 npkill 快速删除 node_modules 对象","description":"","frontmatter":{},"headers":[],"relativePath":"nodejs/npkill快速查找删除node_modules.md","filePath":"nodejs/npkill快速查找删除node_modules.md","lastUpdated":1713718044000}'),k={name:"nodejs/npkill快速查找删除node_modules.md"},m=d('<h1 id="使用-npkill-快速删除-node-modules-对象" tabindex="-1">使用 <code>npkill</code> 快速删除 node_modules 对象 <a class="header-anchor" href="#使用-npkill-快速删除-node-modules-对象" aria-label="Permalink to &quot;使用 `npkill` 快速删除 node_modules 对象&quot;">​</a></h1><p>查找并销毁旧的和繁重的目录node_modules <a href="https://npm.devtool.tech/npkill" target="_blank" rel="noreferrer">https://npm.devtool.tech/npkill</a><img src="'+h+'" alt=""></p><p>node_modules 以作为宇宙中最重的对象而闻名 <img src="'+c+`" alt=""></p><p>在 windows 上对 node_modules 删除时, 经常会出现窗口卡住或死机. 在这方面 <code>npkill</code> 似乎看起来是个专家</p><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><p>使用起来也十分方便. 如果你不想安装那么可以执行</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">npx</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> npkill</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>上下选中, 按下空格键即可 如果你想安装 只需要执行</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> i</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> -g</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> npkill</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h2><h3 id="d-directory-d-搜索并查找项目目录中node-modules的目录" tabindex="-1">-d, --directory -d， 搜索并查找项目目录中node_modules的目录 <a class="header-anchor" href="#d-directory-d-搜索并查找项目目录中node-modules的目录" aria-label="Permalink to &quot;-d, --directory -d， 搜索并查找项目目录中node_modules的目录&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">npkill</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> -d</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> ~/projects</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># otra alternativa:</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> ~/projects</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">npkill</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="t-target-t-指定要搜索的目录的名称-默认值为-node-modules" tabindex="-1">-t, --target -t， 指定要搜索的目录的名称（默认值为 node_modules） <a class="header-anchor" href="#t-target-t-指定要搜索的目录的名称-默认值为-node-modules" aria-label="Permalink to &quot;-t, --target -t， 指定要搜索的目录的名称（默认值为 node_modules）&quot;">​</a></h3><p>它列出了名为“dist”的目录，并显示发生的错误：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">npkill</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> --target</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> dist</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> -e</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="contributors" tabindex="-1">Contributors <a class="header-anchor" href="#contributors" aria-label="Permalink to &quot;Contributors&quot;">​</a></h2>`,16);function u(_,b,g,v,y,f){const a=i,e=l,n=t;return r(),p("div",null,[m,s(a,{readTime:"1",words:"227"}),s(e),s(n)])}const x=o(k,[["render",u]]);export{E as __pageData,x as default};
