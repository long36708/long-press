import{_ as t,a as p,b as l}from"./chunks/PageInfo.vue_vue_type_script_setup_true_lang.BCVHfIj7.js";import{_ as i,c as r,I as a,a7 as c,o}from"./chunks/framework.DGCt2JJv.js";import"./chunks/dayjs.min.DZyl58SH.js";const P=JSON.parse('{"title":"Tabs选项卡","description":"","frontmatter":{},"headers":[],"relativePath":"react/Antd使用踩坑经验汇总/Tabs选项卡.md","filePath":"react/Antd使用踩坑经验汇总/Tabs选项卡.md","lastUpdated":1710047315000}'),b={name:"react/Antd使用踩坑经验汇总/Tabs选项卡.md"},d=c(`<h1 id="tabs选项卡" tabindex="-1">Tabs选项卡 <a class="header-anchor" href="#tabs选项卡" aria-label="Permalink to &quot;Tabs选项卡&quot;">​</a></h1><h2 id="activekey的设置" tabindex="-1">activeKey的设置 <a class="header-anchor" href="#activekey的设置" aria-label="Permalink to &quot;activeKey的设置&quot;">​</a></h2><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>&lt;Tabs</span></span>
<span class="line"><span> hideAdd    // 隐藏增加按钮</span></span>
<span class="line"><span>  type=&quot;editable-card&quot;   // 只有type=&quot;editable-card&quot;时，tab才可以编辑</span></span>
<span class="line"><span>	// 当前激活 tab 面板的 key，只有字符串类型起作用，数字类型不起作用</span></span>
<span class="line"><span> activeKey={activeKey}  </span></span>
<span class="line"><span> onEdit={this.deleteBanner}  // 删除banner</span></span>
<span class="line"><span> onChange={this.tabChange}   // 切换banner</span></span>
<span class="line"><span>&gt;   </span></span>
<span class="line"><span>  &lt;TabPane tab={\`图片\${item.key}\`} key={item.key} closable={true} &gt;</span></span>
<span class="line"><span>      // TabPane 的 key属性用来和Tabs的activeKey相对应， 当两个属性相等时，显示当前页面</span></span>
<span class="line"><span>    {item.name}</span></span>
<span class="line"><span>  &lt;/TabPane&gt;</span></span>
<span class="line"><span>&lt;/ Tabs&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><div class="tip custom-block"><p class="custom-block-title">提示</p><p>子面板的排布顺序一定要按index排布的顺序放置</p></div><h2 id="contributors" tabindex="-1">Contributors <a class="header-anchor" href="#contributors" aria-label="Permalink to &quot;Contributors&quot;">​</a></h2>`,5);function m(u,_,h,T,v,k){const s=t,n=p,e=l;return o(),r("div",null,[d,a(s,{readTime:"1",words:"137"}),a(n),a(e)])}const q=i(b,[["render",m]]);export{P as __pageData,q as default};
