import{_ as i,a as p,b as l}from"./chunks/PageInfo.vue_vue_type_script_setup_true_lang.BCVHfIj7.js";import{_ as t,c as r,I as s,a7 as o,o as u}from"./chunks/framework.DGCt2JJv.js";import"./chunks/dayjs.min.DZyl58SH.js";const x=JSON.parse('{"title":"Eslint","description":"","frontmatter":{},"headers":[],"relativePath":"standard/eslint规范.md","filePath":"standard/eslint规范.md","lastUpdated":1712506417000}'),c={name:"standard/eslint规范.md"},h=o(`<h1 id="eslint" tabindex="-1">Eslint <a class="header-anchor" href="#eslint" aria-label="Permalink to &quot;Eslint&quot;">​</a></h1><nav class="table-of-contents"><ul><li><a href="#eslint-相关文档">Eslint 相关文档</a></li><li><a href="#注意node的版本">注意node的版本</a></li><li><a href="#通用方案">通用方案</a><ul><li><a href="#安装步骤">安装步骤</a></li><li><a href="#配置规则">配置规则</a></li><li><a href="#prettier和eslint冲突问题">Prettier和ESLint冲突问题</a></li><li><a href="#eslintignore">.eslintignore</a></li></ul></li><li><a href="#eslint在vue中的使用详解">ESLint在Vue中的使用详解</a><ul><li><a href="#vue的-lintonsave-配置项">vue的 lintonsave 配置项</a></li><li><a href="#自动化修复">自动化修复</a></li><li><a href="#在-vue-项目中的实践">在 Vue 项目中的实践</a></li><li><a href="#通过-vue-cli-初始化的项目">通过 vue-cli 初始化的项目</a></li><li><a href="#vue3-eslint-prettier实现保存自动格式化代码">Vue3+ESLint+Prettier实现保存自动格式化代码</a></li></ul></li><li><a href="#配置eslint">配置Eslint</a><ul><li><a href="#eslint-补充知识">eslint 补充知识</a></li><li><a href="#如何在老项目中加入eslint">如何在老项目中加入ESlint</a></li><li><a href="#格式化属性换行-vue-max-attributes-per-line">格式化属性换行 vue/max-attributes-per-line</a></li></ul></li><li><a href="#配置扩展-extends">配置扩展 extends</a></li><li><a href="#规则等级">规则等级</a></li><li><a href="#规则的优先级">规则的优先级</a></li><li><a href="#针对个别文件设置新的检查规则">针对个别文件设置新的检查规则</a></li><li><a href="#快速创建一个eslint配置文件">快速创建一个eslint配置文件</a></li><li><a href="#eslint常见报错">eslint常见报错</a></li><li><a href="#使用-eslint-自动调整-import-代码顺序">使用 eslint 自动调整 import 代码顺序</a></li><li><a href="#react相关">React相关</a><ul><li><a href="#react-编译模式配置">React 编译模式配置</a></li><li><a href="#react-属性自动排序规则配置">React 属性自动排序规则配置</a></li></ul></li><li><a href="#contributors">Contributors</a></li></ul></nav><div class="tip custom-block"><p class="custom-block-title">提示</p><p>js校验必备，注意eslint只针对js或ts做校验</p></div><h2 id="eslint-相关文档" tabindex="-1">Eslint 相关文档 <a class="header-anchor" href="#eslint-相关文档" aria-label="Permalink to &quot;Eslint 相关文档&quot;">​</a></h2><p><a href="https://cloud.tencent.com/developer/section/1135736" target="_blank" rel="noreferrer">中文开发手册</a></p><p><a href="http://eslint.cn/docs/rules/" target="_blank" rel="noreferrer">eslint规则地址</a></p><p><a href="https://mp.weixin.qq.com/s/-cUeeXumUtJOWVBofky27g" target="_blank" rel="noreferrer">ESLint全方位解析</a></p><p><a href="https://juejin.cn/post/6974223481181306888" target="_blank" rel="noreferrer">从 ESLint 开始，说透我如何在团队项目中基于 Vue 做代码校验</a></p><h2 id="注意node的版本" tabindex="-1">注意node的版本 <a class="header-anchor" href="#注意node的版本" aria-label="Permalink to &quot;注意node的版本&quot;">​</a></h2><p>To use ESLint, you must have Node.js (^12.22.0, ^14.17.0, or &gt;=16.0.0) installed and built with SSL support. (If you are using an official Node.js distribution, SSL is always built in.)</p><h2 id="通用方案" tabindex="-1">通用方案 <a class="header-anchor" href="#通用方案" aria-label="Permalink to &quot;通用方案&quot;">​</a></h2><h3 id="安装步骤" tabindex="-1">安装步骤 <a class="header-anchor" href="#安装步骤" aria-label="Permalink to &quot;安装步骤&quot;">​</a></h3><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> --save-dev</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> eslint</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">touch</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> .eslintrc.js</span><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> # 或者npx eslint --init</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> init</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> @eslint/config</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="配置规则" tabindex="-1">配置规则 <a class="header-anchor" href="#配置规则" aria-label="Permalink to &quot;配置规则&quot;">​</a></h3><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>/*</span></span>
<span class="line"><span>* &quot;off&quot; 或 0 ==&gt; 关闭规则</span></span>
<span class="line"><span>* &quot;warn&quot; 或 1 ==&gt; 打开的规则作为警告（不影响代码执行）</span></span>
<span class="line"><span>* &quot;error&quot; 或 2 ==&gt; 规则作为一个错误（代码不能执行，界面报错）</span></span>
<span class="line"><span>*/</span></span>
<span class="line"><span>module.exports = {</span></span>
<span class="line"><span>    env: {</span></span>
<span class="line"><span>        browser: true,</span></span>
<span class="line"><span>        es2021: true,</span></span>
<span class="line"><span>        node: true</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span>    extends: [</span></span>
<span class="line"><span>        &quot;eslint:recommended&quot;,</span></span>
<span class="line"><span>        &quot;plugin:react/recommended&quot;,</span></span>
<span class="line"><span>        &quot;plugin:@typescript-eslint/recommended&quot;,</span></span>
<span class="line"><span>    ],</span></span>
<span class="line"><span>    overrides: [],</span></span>
<span class="line"><span>    parser: &quot;@typescript-eslint/parser&quot;,</span></span>
<span class="line"><span>    parserOptions: {</span></span>
<span class="line"><span>        ecmaVersion: &quot;latest&quot;,</span></span>
<span class="line"><span>        sourceType: &quot;module&quot;,</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span>    plugins: [&quot;react&quot;, &quot;@typescript-eslint&quot;],</span></span>
<span class="line"><span>    /*</span></span>
<span class="line"><span>    *  &quot;off&quot; 或 0 ==&gt; 关闭规则</span></span>
<span class="line"><span>    *  &quot;warn&quot; 或 1 ==&gt; 打开的规则作为警告（不影响代码执行）</span></span>
<span class="line"><span>    *  &quot;error&quot; 或 2 ==&gt; 规则作为一个错误（代码不能执行，界面报错）</span></span>
<span class="line"><span>    */</span></span>
<span class="line"><span>    rules: {</span></span>
<span class="line"><span>        &#39;react/react-in-jsx-scope&#39;: &#39;off&#39;,</span></span>
<span class="line"><span>        &#39;no-console&#39;: &#39;error&#39;, // 禁止使用console</span></span>
<span class="line"><span>        &#39;no-unused-vars&#39;: &#39;error&#39;,// 禁止定义未使用的变量</span></span>
<span class="line"><span>        &#39;no-debugger&#39;: &#39;error&#39;, // 禁止使用debugger</span></span>
<span class="line"><span>        &#39;no-var&#39;: &#39;error&#39;, // 要求使用 let 或 const 而不是 var</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span>};</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br></div></div><h3 id="prettier和eslint冲突问题" tabindex="-1">Prettier和ESLint冲突问题 <a class="header-anchor" href="#prettier和eslint冲突问题" aria-label="Permalink to &quot;Prettier和ESLint冲突问题&quot;">​</a></h3><p><a href="https://blog.csdn.net/xs20691718/article/details/122727900?spm=1001.2014.3001.5502" target="_blank" rel="noreferrer">ESLint 和 Prettier 配合使用</a></p><p>如果项目出现规则冲突以后，需要安装以下插件解决冲突，如果未出现冲突，则可以忽略。</p><p>安装插件 <code>eslint-plugin-prettier eslint-config-prettier</code></p><div class="language-shell vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> eslint-plugin-prettier</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> eslint-config-prettier</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li><p>eslint-config-prettier 的作用是关闭eslint中与prettier相互冲突的规则。</p></li><li><p>eslint-plugin-prettier 的作用是赋予eslint用prettier格式化代码的能力。</p></li></ul><p>安装依赖并修改.eslintrc文件</p><p>prettier 添加到 extends的最后</p><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes light-plus one-dark-pro has-diff vp-code" tabindex="0"><code><span class="line"><span>{</span></span>
<span class="line"><span>  &quot;extends&quot;: [</span></span>
<span class="line diff add"><span>		&quot;plugin:prettier/recommended&quot;添加到数组的最后一个元素</span></span>
<span class="line"><span>	]</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="eslintignore" tabindex="-1">.eslintignore <a class="header-anchor" href="#eslintignore" aria-label="Permalink to &quot;.eslintignore&quot;">​</a></h3><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>dist/</span></span>
<span class="line"><span>node_modules/</span></span>
<span class="line"><span>types/</span></span>
<span class="line"><span>cache/</span></span>
<span class="line"><span>!docs/.vitepress</span></span>
<span class="line"><span>!/.eslintrc.js</span></span>
<span class="line"><span>!.test</span></span>
<span class="line"><span>.temp</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="eslint在vue中的使用详解" tabindex="-1">ESLint在Vue中的使用详解 <a class="header-anchor" href="#eslint在vue中的使用详解" aria-label="Permalink to &quot;ESLint在Vue中的使用详解&quot;">​</a></h2><h3 id="vue的-lintonsave-配置项" tabindex="-1">vue的 lintonsave 配置项 <a class="header-anchor" href="#vue的-lintonsave-配置项" aria-label="Permalink to &quot;vue的 lintonsave 配置项&quot;">​</a></h3><p><a href="https://cli.vuejs.org/zh/config/#lintonsave" target="_blank" rel="noreferrer">https://cli.vuejs.org/zh/config/#lintonsave</a></p><p>Type: boolean | &#39;warning&#39; | &#39;default&#39; | &#39;error&#39;</p><p>Default: &#39;default&#39;</p><p>是否在开发环境下通过 eslint-loader 在每次保存时 lint 代码。这个值会在 @vue/cli-plugin-eslint 被安装之后生效。</p><p>设置为 true 或 &#39;warning&#39; 时，eslint-loader 会将 lint 错误输出为编译警告。默认情况下，警告仅仅会被输出到命令行，且不会使得编译失败。</p><p>如果你希望让 lint 错误在开发时直接显示在浏览器中，你可以使用 lintOnSave: &#39;default&#39;。这会强制 eslint-loader 将 lint 错误输出为编译错误，同时也意味着 lint 错误将会导致编译失败。</p><p>设置为 error 将会使得 eslint-loader 把 lint 警告也输出为编译错误，这意味着 lint 警告将会导致编译失败。</p><p>或者，你也可以通过设置让浏览器 overlay 同时显示警告和错误：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// vue.config.js</span></span>
<span class="line"><span style="--shiki-light:#267F99;--shiki-dark:#E5C07B;">module</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#267F99;--shiki-dark:#E5C07B;">exports</span><span style="--shiki-light:#000000;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">	devServer</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">		overlay</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">			warnings</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">			errors</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> true</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">		}</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">	}</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>当 lintOnSave 是一个 truthy 的值时，eslint-loader 在开发和生产构建下都会被启用。如果你想要在生产构建时禁用 eslint-loader，你可以用如下配置：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// vue.config.js</span></span>
<span class="line"><span style="--shiki-light:#267F99;--shiki-dark:#E5C07B;">module</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#267F99;--shiki-dark:#E5C07B;">exports</span><span style="--shiki-light:#000000;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">	lintOnSave</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#001080;--shiki-dark:#E5C07B;"> process</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#001080;--shiki-dark:#E5C07B;">env</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#0070C1;--shiki-dark:#E06C75;">NODE_ENV</span><span style="--shiki-light:#000000;--shiki-dark:#56B6C2;"> !==</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;production&#39;</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="自动化修复" tabindex="-1">自动化修复 <a class="header-anchor" href="#自动化修复" aria-label="Permalink to &quot;自动化修复&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 代码格式检查</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> lint</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 代码格式检查并自动修复</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> lint</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> --</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> --fix</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>只能帮我们自动修复格式类的错误,比如多写了几个空格,缩进,单双引号之类的.</p><p>如果是逻辑性的错误,比如定义了变量却没使用vscode按保存是修复不了的,需要手动修改</p><h3 id="在-vue-项目中的实践" tabindex="-1">在 Vue 项目中的实践 <a class="header-anchor" href="#在-vue-项目中的实践" aria-label="Permalink to &quot;在 Vue 项目中的实践&quot;">​</a></h3><p>关于如何在 Vue 中落地代码校验，一般是有 2 种情况：</p><ul><li>通过 vue-cli 初始化项目的时候已经选择了对应的校验配置</li><li>对于一个空的 Vue 项目，想接入代码校验</li></ul><p>其实这 2 种情况最终的校验的核心配置都是一样的，只是刚开始的时候安装的包有所区别。</p><p>下面通过分析 vue-cli 配置的代码校验，来看看它到底做了哪些事情，通过它安装的包以及包的作用，我们就会知道如何在空项目中配置代码校验了。</p><h3 id="通过-vue-cli-初始化的项目" tabindex="-1">通过 vue-cli 初始化的项目 <a class="header-anchor" href="#通过-vue-cli-初始化的项目" aria-label="Permalink to &quot;通过 vue-cli 初始化的项目&quot;">​</a></h3><p>如果你的项目最初是通过 vue-cli 新建的，那么在新建的时候会让你选</p><ul><li>是否支持 eslint；</li><li>是否开启保存校验；</li><li>是否开启提交前校验；</li><li></li></ul><p>如果都开启了话，会安装如下几个包：</p><ul><li>eslint：前面 2 大章节介绍的就是这玩意，ESLint 出品，是代码校验的基础包，且提供了很多内置的 Rules，比如 eslint:recommended 经常被作为项目的 JS 检查规范被引入；</li><li>babel-eslint：一个对 Babel 解析器的包装，使其能够与 ESLint 兼容；</li><li>lint-staged：请看后面 pre-commit 部分；</li><li>@vue/cli-plugin-eslint</li><li>eslint-plugin-vue</li><li></li></ul><p>下面重点介绍 @vue/cli-plugin-eslint 和 eslint-plugin-vue，说下这 2 个包是干嘛的。</p><p><strong>@vue/cli-plugin-eslint</strong> 这个包它主要干了 2 件事情：</p><p>第一件事</p><p>往 package.json 里注册了一个命令：</p><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>{</span></span>
<span class="line"><span>    &quot;scripts&quot;: {</span></span>
<span class="line"><span>        &quot;lint&quot;: &quot;vue-cli-service lint&quot;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>执行这个命令之后，它会去检查和修复部分可以修复的问题。</p><p>默认查找的文件是 src 和 tests 目录下所有的 .js,.jsx,.vue 文件，以及项目根目录下所有的 js 文件（比如，也会检查 .eslintrc.js）。</p><p>当然你也可以自定义的传入参数和校验文件：</p><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>vue-cli-service lint [options] [...files]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>支持的参数如下：</p><ul><li>--no-fix: 不会修复 errors 和 warnings；</li><li>--max-errors [limit]：指定导致出现 npm ERR 错误的最大 errors 数量；</li></ul><p>第二件事</p><p>增加了代码保存触发校验的功能 lintOnSave，这个功能默认是开启的。如果想要关闭这个功能，可以在 vue.config.js 里配置，习惯上只开启 development 环境下的代码保存校验功能：</p><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>module.exports = {</span></span>
<span class="line"><span>    lintOnSave: process.env.NODE_ENV === &#39;development&#39;,</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>lintOnSave 参数说明：</p><ul><li>true 或者 warning：开启保存校验，会将 errors 级别的错误在终端中以 WARNING 的形式显示。默认的，WARNING 将不会导致编译失败；</li><li>false：不开启保存校验；</li><li>error：开启保存校验，会将 errors 级别的错误在终端中以 ERROR 的形式出现，会导致编译失败，同时浏览器页面变黑，显示 Failed to compile。</li></ul><p><strong>eslint-plugin-vue</strong></p><p>eslint-plugin-vue 是对 .vue 文件进行代码校验的插件。</p><p>针对这个插件，它提供了这几个扩展</p><ul><li>plugin:vue/base：基础</li><li>plugin:vue/essential：预防错误的（用于 Vue 2.x）</li><li>plugin:vue/recommended：推荐的，最小化任意选择和认知开销（用于 Vue 2.x）；</li><li>plugin:vue/strongly-recommended：强烈推荐，提高可读性（用于 Vue 2.x）；</li><li>plugin:vue/vue3-essential：（用于 Vue 3.x）</li><li>plugin:vue/vue3-strongly-recommended：（用于 Vue 3.x）</li><li>plugin:vue/vue3-recommended：（用于 Vue 3.x）</li><li></li></ul><p>各扩展规则列表：vue rules</p><p>看到这么一堆的扩展，是不是都不知道选哪个了</p><p>代码规范的东西，原则还是得由各自的团队去磨合商议出一套适合大家的规则。不过，如果你用的是 Vue2，我这里可以推荐 2 套 extends 配置：</p><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>{</span></span>
<span class="line"><span>    // Vue 官方示例上的配置</span></span>
<span class="line"><span>   extends: [&#39;eslint:recommended&#39;, &#39;plugin:vue/recommended&#39;],  </span></span>
<span class="line"><span></span></span>
<span class="line"><span>   // 或者使用 AlloyTeam 团队那套</span></span>
<span class="line"><span>   extends: [&#39;alloy&#39;, &#39;alloy/vue&#39;]</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><strong>配置和插件对应的解析器</strong></p><p>如果是 Vue 2.x 项目，配置了 eslint-plugin-vue 插件和 extends 后，template 校验还是会失效，因为不管是 ESLint 默认的解析器 Espree 还是 babel-eslint 都只能解析 JS，无法解析 template 的内容。</p><p>而 vue-eslint-parser 只能解析 template 的内容，但是不会解析 JS，因此还需要对解析器做如下配置：</p><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>{</span></span>
<span class="line"><span>    parser: &#39;vue-eslint-parser&#39;,</span></span>
<span class="line"><span>    parseOptions: {</span></span>
<span class="line"><span>        parser: &#39;babel-eslint&#39;,</span></span>
<span class="line"><span>        ecmaVersion: 12,</span></span>
<span class="line"><span>        sourceType: &#39;module&#39;</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span>    extends: [</span></span>
<span class="line"><span>        &#39;eslint:recommended&#39;, </span></span>
<span class="line"><span>        &#39;plugin:vue/recommended&#39;</span></span>
<span class="line"><span>    ],</span></span>
<span class="line"><span>    plugins: [&#39;vue&#39;]</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>安装Eslint&amp;Prettier相关依赖</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> eslint</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> prettier</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> eslint-config-prettier</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> eslint-plugin-prettier</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> -Dw</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>安装检测typescript语法及风格依赖</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> @typescript-eslint/eslint-plugin</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> @typescript-eslint/parser</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> -Dw</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>.eslintrc</p><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span></span></span>
<span class="line"><span>  &quot;root&quot;: true,</span></span>
<span class="line"><span>  &quot;env&quot;: {</span></span>
<span class="line"><span>    &quot;browser&quot;: true,</span></span>
<span class="line"><span>    &quot;es2021&quot;: true,</span></span>
<span class="line"><span>    &quot;node&quot;: true</span></span>
<span class="line"><span>  },</span></span>
<span class="line"><span>  &quot;extends&quot;: [</span></span>
<span class="line"><span>    &quot;eslint:recommended&quot;,</span></span>
<span class="line"><span>    &quot;plugin:@typescript-eslint/recommended&quot;,</span></span>
<span class="line"><span>    &quot;plugin:prettier/recommended&quot;,</span></span>
<span class="line"><span>    &quot;prettier/@typescript-eslint&quot; // 禁用TS插件中与 Prettier 冲突的规则</span></span>
<span class="line"><span>    // 之后vue react等其它插件,需要在后面做配置</span></span>
<span class="line"><span>    // prettier/**</span></span>
<span class="line"><span>    // 解决Prettier与插件之间兼容问题</span></span>
<span class="line"><span>  ],</span></span>
<span class="line"><span>  &quot;overrides&quot;: [],</span></span>
<span class="line"><span>  &quot;parser&quot;: &quot;@typescript-eslint/parser&quot;,</span></span>
<span class="line"><span>  &quot;parserOptions&quot;: {</span></span>
<span class="line"><span>    &quot;ecmaVersion&quot;: &quot;latest&quot;,</span></span>
<span class="line"><span>    &quot;sourceType&quot;: &quot;module&quot;</span></span>
<span class="line"><span>  },</span></span>
<span class="line"><span>  &quot;plugins&quot;: [&quot;@typescript-eslint&quot;],</span></span>
<span class="line"><span>  &quot;rules&quot;: {}</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div><h3 id="vue3-eslint-prettier实现保存自动格式化代码" tabindex="-1">Vue3+ESLint+Prettier实现保存自动格式化代码 <a class="header-anchor" href="#vue3-eslint-prettier实现保存自动格式化代码" aria-label="Permalink to &quot;Vue3+ESLint+Prettier实现保存自动格式化代码&quot;">​</a></h3><p><a href="https://blog.csdn.net/qq_44910894/article/details/131012372" target="_blank" rel="noreferrer">https://blog.csdn.net/qq_44910894/article/details/131012372</a></p><h2 id="配置eslint" tabindex="-1">配置Eslint <a class="header-anchor" href="#配置eslint" aria-label="Permalink to &quot;配置Eslint&quot;">​</a></h2><p>项目搭建完成后，根目录下会自动生成一个.eslintrc.js文件，我们直接来看默认的配置：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#267F99;--shiki-dark:#E5C07B;">module</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#267F99;--shiki-dark:#E5C07B;">exports</span><span style="--shiki-light:#000000;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">	root</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">	env</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">		node</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> true</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">	},</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">	extends</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&#39;plugin:vue/essential&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&#39;@vue/prettier&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">],</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">	rules</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">		&#39;no-console&#39;</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#001080;--shiki-dark:#E5C07B;"> process</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#001080;--shiki-dark:#E5C07B;">env</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#0070C1;--shiki-dark:#E06C75;">NODE_ENV</span><span style="--shiki-light:#000000;--shiki-dark:#56B6C2;"> ===</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;production&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#C678DD;"> ?</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;error&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#C678DD;"> :</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;off&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">		&#39;no-debugger&#39;</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#001080;--shiki-dark:#E5C07B;"> process</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#001080;--shiki-dark:#E5C07B;">env</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#0070C1;--shiki-dark:#E06C75;">NODE_ENV</span><span style="--shiki-light:#000000;--shiki-dark:#56B6C2;"> ===</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;production&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#C678DD;"> ?</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;error&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#C678DD;"> :</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;off&#39;</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">	},</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">	parserOptions</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">		parser</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;@typescript-eslint/parser&#39;</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">	}</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>这里extends是一个数组，数组第一个成员&quot;plugin:vue/essential&quot;表示的是：引入eslint-plugin-vue插件，并开启essential类别中的一系列规则。</p><p>eslint-plugin-vue把所有规则分为四个类别，依次为：base, essential, strongly-recommended, recommended，后面的每个类别都是对前一个类别的拓展。除了这四个类别外，还有两个未归类的规则，所有的类别及规则都可以在这里查看。</p><p>这里默认启用的是essential类别里面的规则，我们也可以使用&quot;plugin:vue/strongly-recommended&quot; 或 &quot;plugin:vue/recommend&quot; 启用更多的规则，如果仅仅想启用strongly-recommended和recommend里面的部分规则，可以在.eslintrc.js文件的rules选项中配置。</p><h3 id="eslint-补充知识" tabindex="-1">eslint 补充知识 <a class="header-anchor" href="#eslint-补充知识" aria-label="Permalink to &quot;eslint 补充知识&quot;">​</a></h3><p>extends的属性值可以是：</p><p>指定配置的字符串（配置文件的路径、可共享配置的名称、eslint:recommended 或 eslint:all） 字符串数组：每个配置继承它前面的配置 可选的配置项如下：</p><p>eslint:recommended 启用一些列核心规则 可共享的配置（比如，eslint-config-standard），这是一个npm包，属性值可以省略包名的前缀eslint-config- 插件，是一个 npm 包，属性值可以省略包名的前缀eslint-plugin-，属性值为，plugin:包名/配置名称 指向一个配置文件的相对路径或绝对路径 eslint:all 启用当前安装的eslint版本中所有核心规则，不推荐使用 plugins的属性值是一个字符串列表：</p><p>在使用插件之前，你必须安装它 插件名称可以省略eslint-plugin-前缀 eslint规则文档中，带扳手图标的规则就是eslint能够自动修复的规则。而不带该图标的规则，eslint则只能给出错误或警告，需要开发者手动修复。</p><h3 id="如何在老项目中加入eslint" tabindex="-1">如何在老项目中加入ESlint <a class="header-anchor" href="#如何在老项目中加入eslint" aria-label="Permalink to &quot;如何在老项目中加入ESlint&quot;">​</a></h3><ol><li>在目录中添加.editorconfig、.eslintrc.js、.eslintignore这三个文件</li><li>在package.json的”devDependencies”中加入ESlint所需要的包</li></ol><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span> &quot;babel-eslint&quot;: &quot;^7.1.1&quot;,  </span></span>
<span class="line"><span> &quot;eslint&quot;: &quot;^3.19.0&quot;,  </span></span>
<span class="line"><span> &quot;eslint-config-standard&quot;: &quot;^10.2.1&quot;,  </span></span>
<span class="line"><span> &quot;eslint-friendly-formatter&quot;: &quot;^3.0.0&quot;,  </span></span>
<span class="line"><span> &quot;eslint-loader&quot;: &quot;^1.7.1&quot;,  </span></span>
<span class="line"><span> &quot;eslint-plugin-html&quot;: &quot;^3.0.0&quot;,  </span></span>
<span class="line"><span> &quot;eslint-plugin-import&quot;: &quot;^2.7.0&quot;,  </span></span>
<span class="line"><span> &quot;eslint-plugin-node&quot;: &quot;^5.2.0&quot;,  </span></span>
<span class="line"><span> &quot;eslint-plugin-promise&quot;: &quot;^3.4.0&quot;,  </span></span>
<span class="line"><span> &quot;eslint-plugin-standard&quot;: &quot;^3.0.1&quot;,</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><ol start="3"><li>在bulid/webpack.base.conf.js文件中加入ESlint规则并生效</li></ol><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>//  在module的rules中加入</span></span>
<span class="line"><span>  module: {</span></span>
<span class="line"><span>    rules: [</span></span>
<span class="line"><span>      {</span></span>
<span class="line"><span>        test: /\\.(js|vue)$/,</span></span>
<span class="line"><span>        loader: &#39;eslint-loader&#39;,</span></span>
<span class="line"><span>        enforce: &#39;pre&#39;,</span></span>
<span class="line"><span>        include: [resolve(&#39;src&#39;), resolve(&#39;test&#39;)],</span></span>
<span class="line"><span>        options: {</span></span>
<span class="line"><span>          formatter: require(&#39;eslint-friendly-formatter&#39;),          // 不符合Eslint规则时只警告(默认运行出错)</span></span>
<span class="line"><span>          // emitWarning: !config.dev.showEslintErrorsInOverlay</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>      },</span></span>
<span class="line"><span>    ]</span></span>
<span class="line"><span>  }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><ol start="4"><li>重新bulid代码运行,完美生效!!!!!!</li></ol><h3 id="格式化属性换行-vue-max-attributes-per-line" tabindex="-1">格式化属性换行 vue/max-attributes-per-line <a class="header-anchor" href="#格式化属性换行-vue-max-attributes-per-line" aria-label="Permalink to &quot;格式化属性换行 vue/max-attributes-per-line&quot;">​</a></h3><p>vue/max-attributes-per-line 强制每行最大的属性数目 分两头</p><p>单行的情况下可以接受的数量是可配置的。（默认1）</p><p>多行的情况下，每行可接受多少个属性。（默认1）</p><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>&quot;vue/max-attributes-per-line&quot;: [&quot;error&quot;, {</span></span>
<span class="line"><span>	&quot;singleline&quot;: 3,</span></span>
<span class="line"><span>	&quot;multiline&quot;: {</span></span>
<span class="line"><span>		&quot;max&quot;: 1,</span></span>
<span class="line"><span>		&quot;allowFirstLine&quot;: false</span></span>
<span class="line"><span>	}</span></span>
<span class="line"><span>}],</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>个人设定的是单行每行不能超过3个，多行每行不能超过一个，而且不允许在多行的情况下第一行有属性。 举个栗子</p><div class="language-vue vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#800000;--shiki-dark:#E06C75;">template</span><span style="--shiki-light:#800000;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#ABB2BF;">	&lt;</span><span style="--shiki-light:#800000;--shiki-dark:#E06C75;">MyComponent</span></span>
<span class="line"><span style="--shiki-light:#E50000;--shiki-dark:#D19A66;">		lorem</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#0000FF;--shiki-dark:#98C379;">&quot;1&quot;</span></span>
<span class="line"><span style="--shiki-light:#E50000;--shiki-dark:#D19A66;">		ipsum</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#0000FF;--shiki-dark:#98C379;">&quot;2&quot;</span></span>
<span class="line"><span style="--shiki-light:#E50000;--shiki-dark:#D19A66;">		dolor</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#0000FF;--shiki-dark:#98C379;">&quot;3&quot;</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#ABB2BF;">	/&gt;</span></span>
<span class="line"><span style="--shiki-light:#800000;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#800000;--shiki-dark:#E06C75;">template</span><span style="--shiki-light:#800000;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>当时设置allowFirstLine为false,上面代码这样的格式是不允许的。</p><p>通常vue项目推荐设置</p><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>rules:{</span></span>
<span class="line"><span>	&#39;vue/max-attributes-per-line&#39;: [</span></span>
<span class="line"><span>		2,</span></span>
<span class="line"><span>		{</span></span>
<span class="line"><span>			singleline: 10,</span></span>
<span class="line"><span>			multiline: {</span></span>
<span class="line"><span>				max: 1,</span></span>
<span class="line"><span>				allowFirstLine: true // 首行允许属性</span></span>
<span class="line"><span>			}</span></span>
<span class="line"><span>		}</span></span>
<span class="line"><span>	]</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="配置扩展-extends" tabindex="-1">配置扩展 extends <a class="header-anchor" href="#配置扩展-extends" aria-label="Permalink to &quot;配置扩展 extends&quot;">​</a></h2><p>实际项目中配置规则的时候，不可能团队一条一条的去商议配置，太费精力了。通常的做法是使用业内大家普通使用的、遵循的编码规范；然后通过 extends 去引入这些规范。</p><p>extends 配置的时候接受字符串或者数组：</p><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>{</span></span>
<span class="line"><span>    extends: [</span></span>
<span class="line"><span>        &#39;eslint:recommended&#39;,</span></span>
<span class="line"><span>        &#39;plugin:vue/essential&#39;,</span></span>
<span class="line"><span>        &#39;eslint-config-standard&#39;, // 可以缩写成 &#39;standard&#39;</span></span>
<span class="line"><span>        &#39;@vue/prettier&#39;,</span></span>
<span class="line"><span>        &#39;./node_modules/coding-standard/.eslintrc-es6&#39;</span></span>
<span class="line"><span>    ]</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>从上面的配置，可以知道 extends 支持的配置类型可以是以下几种</p><ul><li>eslint 开头的：是 ESLint 官方的扩展；</li><li>plugin 开头的：是插件类型扩展，比如 plugin:vue/essential；</li><li>eslint-config 开头的：来自 npm 包，使用时可以省略前缀 eslint-config-，比如上面的可以直接写成 standard；</li><li>@开头的：扩展和 eslint-config 一样，只是在 npm 包上面加了一层作用域 scope；</li><li>一个执行配置文件的相对路径或绝对路径；</li></ul><p>那有哪些常用的、比较著名扩展可以被 extends 引入呢</p><ul><li>eslint:recommended：ESLint 内置的推荐规则，即 ESLint Rules 列表中打了钩的那些规则；</li><li>eslint:all：ESLint 内置的所有规则；</li><li>eslint-config-standard：standard 的 JS 规范；</li><li>eslint-config-prettier：关闭和 ESLint 中以及其他扩展中有冲突的规则；</li><li>eslint-config-airbnb-base：airbab 的 JS 规范；</li><li>eslint-config-alloy：腾讯 AlloyTeam 前端团队出品，可以很好的针对你项目的技术栈进行配置选择，比如可以选 React、Vue（现已支持 Vue 3.0）、TypeScript 等；</li></ul><h2 id="规则等级" tabindex="-1">规则等级 <a class="header-anchor" href="#规则等级" aria-label="Permalink to &quot;规则等级&quot;">​</a></h2><p>规则的校验说明，有 3 个报错等级</p><p>• off 或 0：关闭对该规则的校验；</p><p>• warn 或 1：启用规则，不满足时抛出警告，且不会退出编译进程；</p><p>• error 或 2：启用规则，不满足时抛出错误，且会退出编译进程；</p><p>如何知道某个扩展有哪些规则可以配置，以及每个规则具体限制？这里直接给出业内著名且使用比较多的规则列表的快速链接：</p><p>• ESLint rules，这整个列表对应 eslint:all，而打钩 ✔️ 的是 eslint:recommenmed； • Prettier rules • standard rules • airbnb rules • AlloyTeam vue rules</p><h2 id="规则的优先级" tabindex="-1">规则的优先级 <a class="header-anchor" href="#规则的优先级" aria-label="Permalink to &quot;规则的优先级&quot;">​</a></h2><ul><li>如果 extends 配置的是一个数组，那么最终会将所有规则项进行合并，出现冲突的时候，后面的会覆盖前面的；</li><li>通过 rules 单独配置的规则优先级比 extends 高；</li></ul><h2 id="针对个别文件设置新的检查规则" tabindex="-1">针对个别文件设置新的检查规则 <a class="header-anchor" href="#针对个别文件设置新的检查规则" aria-label="Permalink to &quot;针对个别文件设置新的检查规则&quot;">​</a></h2><p>比如 webpack 的中包含了某些运行时的 JS 文件，而这些文件是只跑在浏览器端的，所以需要针对这部分文件进行差异化配置：</p><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>overrides: [</span></span>
<span class="line"><span>    {</span></span>
<span class="line"><span>        files: [&quot;lib/**/*.runtime.js&quot;, &quot;hot/*.js&quot;],</span></span>
<span class="line"><span>        env: {</span></span>
<span class="line"><span>            es6: false,</span></span>
<span class="line"><span>            browser: true</span></span>
<span class="line"><span>        },</span></span>
<span class="line"><span>            globals: {</span></span>
<span class="line"><span>            Promise: false</span></span>
<span class="line"><span>        },</span></span>
<span class="line"><span>        parserOptions: {</span></span>
<span class="line"><span>            ecmaVersion: 5</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="快速创建一个eslint配置文件" tabindex="-1">快速创建一个eslint配置文件 <a class="header-anchor" href="#快速创建一个eslint配置文件" aria-label="Permalink to &quot;快速创建一个eslint配置文件&quot;">​</a></h2><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span># 安装 eslint</span></span>
<span class="line"><span>npm i eslint -D</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 初始化一个配置文件</span></span>
<span class="line"><span>npx eslint --init</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 可以通过 --ext 来指定具体需要校验的文件：</span></span>
<span class="line"><span>npx eslint --ext .js,.jsx,.vue src</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>把校验命令加到 package.json</p><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>{</span></span>
<span class="line"><span>    &quot;scripts&quot;: {</span></span>
<span class="line"><span>        &quot;lint&quot;: &quot;npx eslint --ext .js,.jsx,.vue src&quot;,</span></span>
<span class="line"><span>        &quot;lint:fix&quot;: &quot;npx eslint --fix --ext .js,.jsx,.vue src&quot;,</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>过滤一些不需要校验的文件</p><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span># 在项目根目录通过创建一个 .eslintignore 文件</span></span>
<span class="line"><span>public/</span></span>
<span class="line"><span>src/main.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>除了 .eslintignore 中指定的文件或目录，ESLint 总是忽略 /node_modules/ 和 /bower_components/ 中的文件；</p><p>因此对于一些目前解决不了的规则报错，但是如果又急于打包上线，在不影响运行的情况下，我们就可以利用 .eslintignore 文件将其暂时忽略。</p><h2 id="eslint常见报错" tabindex="-1">eslint常见报错 <a class="header-anchor" href="#eslint常见报错" aria-label="Permalink to &quot;eslint常见报错&quot;">​</a></h2><p>文件末尾存在空行(eol-last)：Too many blank lines at the end of file.Max of 0 allowed</p><p>缺少分号(‘semi’: [‘error’,’always’]) :Missing semicolon</p><p>函数关键字后面缺少空格 :Missing space before function parentheses</p><p>字符串没有使用单引号(’quotes’: [1, ’single’]) ：String must use singlequote</p><p>缩进错误 ： Expected indentation of 2 spaces but found 4</p><p>没有使用全等(eqeqeq) : Expected ’ === ’ and instaed saw ‘==’</p><p>导入组件却没有使用 : ‘seller’ is defined but never used</p><p>new了一个对象却没有赋值给某个常量(可以在该实例前添加此代码/eslint-disable</p><p>no-new/忽略ESLint的检查): Do not user’new’ for side effects</p><p>超过一行空白行(no-multiple-empty-lines):More than 1 blank line not allowed</p><p>注释符 // 后面缩进错误(lines-around-comment): Expected space or tab after ‘//’ in comment</p><p>模块导入没有放在顶部：Import in body of module; reorder to top</p><p>前面缺少空格：Missing space before</p><p>已定义但是没有使用：‘scope’ is defined but never used</p><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>&quot;no-alert&quot;: 0,//禁止使用alert confirm prompt</span></span>
<span class="line"><span>&quot;no-array-constructor&quot;: 2,//禁止使用数组构造器</span></span>
<span class="line"><span>&quot;no-bitwise&quot;: 0,//禁止使用按位运算符</span></span>
<span class="line"><span>&quot;no-caller&quot;: 1,//禁止使用arguments.caller或arguments.callee</span></span>
<span class="line"><span>&quot;no-catch-shadow&quot;: 2,//禁止catch子句参数与外部作用域变量同名</span></span>
<span class="line"><span>&quot;no-class-assign&quot;: 2,//禁止给类赋值</span></span>
<span class="line"><span>&quot;no-cond-assign&quot;: 2,//禁止在条件表达式中使用赋值语句</span></span>
<span class="line"><span>&quot;no-console&quot;: 2,//禁止使用console</span></span>
<span class="line"><span>&quot;no-const-assign&quot;: 2,//禁止修改const声明的变量</span></span>
<span class="line"><span>&quot;no-constant-condition&quot;: 2,//禁止在条件中使用常量表达式 if(true) if(1)</span></span>
<span class="line"><span>&quot;no-continue&quot;: 0,//禁止使用continue</span></span>
<span class="line"><span>&quot;no-control-regex&quot;: 2,//禁止在正则表达式中使用控制字符</span></span>
<span class="line"><span>&quot;no-debugger&quot;: 2,//禁止使用debugger</span></span>
<span class="line"><span>&quot;no-delete-var&quot;: 2,//不能对var声明的变量使用delete操作符</span></span>
<span class="line"><span>&quot;no-div-regex&quot;: 1,//不能使用看起来像除法的正则表达式/=foo/</span></span>
<span class="line"><span>&quot;no-dupe-keys&quot;: 2,//在创建对象字面量时不允许键重复 {a:1,a:1}</span></span>
<span class="line"><span>&quot;no-dupe-args&quot;: 2,//函数参数不能重复</span></span>
<span class="line"><span>&quot;no-duplicate-case&quot;: 2,//switch中的case标签不能重复</span></span>
<span class="line"><span>&quot;no-else-return&quot;: 2,//如果if语句里面有return,后面不能跟else语句</span></span>
<span class="line"><span>&quot;no-empty&quot;: 2,//块语句中的内容不能为空</span></span>
<span class="line"><span>&quot;no-empty-character-class&quot;: 2,//正则表达式中的[]内容不能为空</span></span>
<span class="line"><span>&quot;no-empty-label&quot;: 2,//禁止使用空label</span></span>
<span class="line"><span>&quot;no-eq-null&quot;: 2,//禁止对null使用==或!=运算符</span></span>
<span class="line"><span>&quot;no-eval&quot;: 1,//禁止使用eval</span></span>
<span class="line"><span>&quot;no-ex-assign&quot;: 2,//禁止给catch语句中的异常参数赋值</span></span>
<span class="line"><span>&quot;no-extend-native&quot;: 2,//禁止扩展native对象</span></span>
<span class="line"><span>&quot;no-extra-bind&quot;: 2,//禁止不必要的函数绑定</span></span>
<span class="line"><span>&quot;no-extra-boolean-cast&quot;: 2,//禁止不必要的bool转换</span></span>
<span class="line"><span>&quot;no-extra-parens&quot;: 2,//禁止非必要的括号</span></span>
<span class="line"><span>&quot;no-extra-semi&quot;: 2,//禁止多余的冒号</span></span>
<span class="line"><span>&quot;no-fallthrough&quot;: 1,//禁止switch穿透</span></span>
<span class="line"><span>&quot;no-floating-decimal&quot;: 2,//禁止省略浮点数中的0 .5 3.</span></span>
<span class="line"><span>&quot;no-func-assign&quot;: 2,//禁止重复的函数声明</span></span>
<span class="line"><span>&quot;no-implicit-coercion&quot;: 1,//禁止隐式转换</span></span>
<span class="line"><span>&quot;no-implied-eval&quot;: 2,//禁止使用隐式eval</span></span>
<span class="line"><span>&quot;no-inline-comments&quot;: 0,//禁止行内备注</span></span>
<span class="line"><span>&quot;no-inner-declarations&quot;: [2, &quot;functions&quot;],//禁止在块语句中使用声明（变量或函数）</span></span>
<span class="line"><span>&quot;no-invalid-regexp&quot;: 2,//禁止无效的正则表达式</span></span>
<span class="line"><span>&quot;no-invalid-this&quot;: 2,//禁止无效的this，只能用在构造器，类，对象字面量</span></span>
<span class="line"><span>&quot;no-irregular-whitespace&quot;: 2,//不能有不规则的空格</span></span>
<span class="line"><span>&quot;no-iterator&quot;: 2,//禁止使用__iterator__ 属性</span></span>
<span class="line"><span>&quot;no-label-var&quot;: 2,//label名不能与var声明的变量名相同</span></span>
<span class="line"><span>&quot;no-labels&quot;: 2,//禁止标签声明</span></span>
<span class="line"><span>&quot;no-lone-blocks&quot;: 2,//禁止不必要的嵌套块</span></span>
<span class="line"><span>&quot;no-lonely-if&quot;: 2,//禁止else语句内只有if语句</span></span>
<span class="line"><span>&quot;no-loop-func&quot;: 1,//禁止在循环中使用函数（如果没有引用外部变量不形成闭包就可以）</span></span>
<span class="line"><span>&quot;no-mixed-requires&quot;: [0, false],//声明时不能混用声明类型</span></span>
<span class="line"><span>&quot;no-mixed-spaces-and-tabs&quot;: [2, false],//禁止混用tab和空格</span></span>
<span class="line"><span>&quot;linebreak-style&quot;: [0, &quot;windows&quot;],//换行风格</span></span>
<span class="line"><span>&quot;no-multi-spaces&quot;: 1,//不能用多余的空格</span></span>
<span class="line"><span>&quot;no-multi-str&quot;: 2,//字符串不能用\\换行</span></span>
<span class="line"><span>&quot;no-multiple-empty-lines&quot;: [1, {&quot;max&quot;: 2}],//空行最多不能超过2行</span></span>
<span class="line"><span>&quot;no-native-reassign&quot;: 2,//不能重写native对象</span></span>
<span class="line"><span>&quot;no-negated-in-lhs&quot;: 2,//in 操作符的左边不能有!</span></span>
<span class="line"><span>&quot;no-nested-ternary&quot;: 0,//禁止使用嵌套的三目运算</span></span>
<span class="line"><span>&quot;no-new&quot;: 1,//禁止在使用new构造一个实例后不赋值</span></span>
<span class="line"><span>&quot;no-new-func&quot;: 1,//禁止使用new Function</span></span>
<span class="line"><span>&quot;no-new-object&quot;: 2,//禁止使用new Object()</span></span>
<span class="line"><span>&quot;no-new-require&quot;: 2,//禁止使用new require</span></span>
<span class="line"><span>&quot;no-new-wrappers&quot;: 2,//禁止使用new创建包装实例，new String new Boolean new Number</span></span>
<span class="line"><span>&quot;no-obj-calls&quot;: 2,//不能调用内置的全局对象，比如Math() JSON()</span></span>
<span class="line"><span>&quot;no-octal&quot;: 2,//禁止使用八进制数字</span></span>
<span class="line"><span>&quot;no-octal-escape&quot;: 2,//禁止使用八进制转义序列</span></span>
<span class="line"><span>&quot;no-param-reassign&quot;: 2,//禁止给参数重新赋值</span></span>
<span class="line"><span>&quot;no-path-concat&quot;: 0,//node中不能使用__dirname或__filename做路径拼接</span></span>
<span class="line"><span>&quot;no-plusplus&quot;: 0,//禁止使用++，--</span></span>
<span class="line"><span>&quot;no-process-env&quot;: 0,//禁止使用process.env</span></span>
<span class="line"><span>&quot;no-process-exit&quot;: 0,//禁止使用process.exit()</span></span>
<span class="line"><span>&quot;no-proto&quot;: 2,//禁止使用__proto__属性</span></span>
<span class="line"><span>&quot;no-redeclare&quot;: 2,//禁止重复声明变量</span></span>
<span class="line"><span>&quot;no-regex-spaces&quot;: 2,//禁止在正则表达式字面量中使用多个空格 /foo bar/</span></span>
<span class="line"><span>&quot;no-restricted-modules&quot;: 0,//如果禁用了指定模块，使用就会报错</span></span>
<span class="line"><span>&quot;no-return-assign&quot;: 1,//return 语句中不能有赋值表达式</span></span>
<span class="line"><span>&quot;no-script-url&quot;: 0,//禁止使用javascript:void(0)</span></span>
<span class="line"><span>&quot;no-self-compare&quot;: 2,//不能比较自身</span></span>
<span class="line"><span>&quot;no-sequences&quot;: 0,//禁止使用逗号运算符</span></span>
<span class="line"><span>&quot;no-shadow&quot;: 2,//外部作用域中的变量不能与它所包含的作用域中的变量或参数同名</span></span>
<span class="line"><span>&quot;no-shadow-restricted-names&quot;: 2,//严格模式中规定的限制标识符不能作为声明时的变量名使用</span></span>
<span class="line"><span>&quot;no-spaced-func&quot;: 2,//函数调用时 函数名与()之间不能有空格</span></span>
<span class="line"><span>&quot;no-sparse-arrays&quot;: 2,//禁止稀疏数组， [1,,2]</span></span>
<span class="line"><span>&quot;no-sync&quot;: 0,//nodejs 禁止同步方法</span></span>
<span class="line"><span>&quot;no-ternary&quot;: 0,//禁止使用三目运算符</span></span>
<span class="line"><span>&quot;no-trailing-spaces&quot;: 1,//一行结束后面不要有空格</span></span>
<span class="line"><span>&quot;no-this-before-super&quot;: 0,//在调用super()之前不能使用this或super</span></span>
<span class="line"><span>&quot;no-throw-literal&quot;: 2,//禁止抛出字面量错误 throw &quot;error&quot;;</span></span>
<span class="line"><span>&quot;no-undef&quot;: 1,//不能有未定义的变量</span></span>
<span class="line"><span>&quot;no-undef-init&quot;: 2,//变量初始化时不能直接给它赋值为undefined</span></span>
<span class="line"><span>&quot;no-undefined&quot;: 2,//不能使用undefined</span></span>
<span class="line"><span>&quot;no-unexpected-multiline&quot;: 2,//避免多行表达式</span></span>
<span class="line"><span>&quot;no-underscore-dangle&quot;: 1,//标识符不能以_开头或结尾</span></span>
<span class="line"><span>&quot;no-unneeded-ternary&quot;: 2,//禁止不必要的嵌套 var isYes = answer === 1 ? true : false;</span></span>
<span class="line"><span>&quot;no-unreachable&quot;: 2,//不能有无法执行的代码</span></span>
<span class="line"><span>&quot;no-unused-expressions&quot;: 2,//禁止无用的表达式</span></span>
<span class="line"><span>&quot;no-unused-vars&quot;: [2, {&quot;vars&quot;: &quot;all&quot;, &quot;args&quot;: &quot;after-used&quot;}],//不能有声明后未被使用的变量或参数</span></span>
<span class="line"><span>&quot;no-use-before-define&quot;: 2,//未定义前不能使用</span></span>
<span class="line"><span>&quot;no-useless-call&quot;: 2,//禁止不必要的call和apply</span></span>
<span class="line"><span>&quot;no-void&quot;: 2,//禁用void操作符</span></span>
<span class="line"><span>&quot;no-var&quot;: 0,//禁用var，用let和const代替</span></span>
<span class="line"><span>&quot;no-warning-comments&quot;: [1, { &quot;terms&quot;: [&quot;todo&quot;, &quot;fixme&quot;, &quot;xxx&quot;], &quot;location&quot;: &quot;start&quot; }],//不能有警告备注</span></span>
<span class="line"><span>&quot;no-with&quot;: 2,//禁用with</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&quot;array-bracket-spacing&quot;: [2, &quot;never&quot;],//是否允许非空数组里面有多余的空格</span></span>
<span class="line"><span>&quot;arrow-parens&quot;: 0,//箭头函数用小括号括起来</span></span>
<span class="line"><span>&quot;arrow-spacing&quot;: 0,//=&gt;的前/后括号</span></span>
<span class="line"><span>&quot;accessor-pairs&quot;: 0,//在对象中使用getter/setter</span></span>
<span class="line"><span>&quot;block-scoped-var&quot;: 0,//块语句中使用var</span></span>
<span class="line"><span>&quot;brace-style&quot;: [1, &quot;1tbs&quot;],//大括号风格</span></span>
<span class="line"><span>&quot;callback-return&quot;: 1,//避免多次调用回调什么的</span></span>
<span class="line"><span>&quot;camelcase&quot;: 2,//强制驼峰法命名</span></span>
<span class="line"><span>&quot;comma-dangle&quot;: [2, &quot;never&quot;],//对象字面量项尾不能有逗号</span></span>
<span class="line"><span>&quot;comma-spacing&quot;: 0,//逗号前后的空格</span></span>
<span class="line"><span>&quot;comma-style&quot;: [2, &quot;last&quot;],//逗号风格，换行时在行首还是行尾</span></span>
<span class="line"><span>&quot;complexity&quot;: [0, 11],//循环复杂度</span></span>
<span class="line"><span>&quot;computed-property-spacing&quot;: [0, &quot;never&quot;],//是否允许计算后的键名什么的</span></span>
<span class="line"><span>&quot;consistent-return&quot;: 0,//return 后面是否允许省略</span></span>
<span class="line"><span>&quot;consistent-this&quot;: [2, &quot;that&quot;],//this别名</span></span>
<span class="line"><span>&quot;constructor-super&quot;: 0,//非派生类不能调用super，派生类必须调用super</span></span>
<span class="line"><span>&quot;curly&quot;: [2, &quot;all&quot;],//必须使用 if(){} 中的{}</span></span>
<span class="line"><span>&quot;default-case&quot;: 2,//switch语句最后必须有default</span></span>
<span class="line"><span>&quot;dot-location&quot;: 0,//对象访问符的位置，换行的时候在行首还是行尾</span></span>
<span class="line"><span>&quot;dot-notation&quot;: [0, { &quot;allowKeywords&quot;: true }],//避免不必要的方括号</span></span>
<span class="line"><span>&quot;eol-last&quot;: 0,//文件以单一的换行符结束</span></span>
<span class="line"><span>&quot;eqeqeq&quot;: 2,//必须使用全等</span></span>
<span class="line"><span>&quot;func-names&quot;: 0,//函数表达式必须有名字</span></span>
<span class="line"><span>&quot;func-style&quot;: [0, &quot;declaration&quot;],//函数风格，规定只能使用函数声明/函数表达式</span></span>
<span class="line"><span>&quot;generator-star-spacing&quot;: 0,//生成器函数*的前后空格</span></span>
<span class="line"><span>&quot;guard-for-in&quot;: 0,//for in循环要用if语句过滤</span></span>
<span class="line"><span>&quot;handle-callback-err&quot;: 0,//nodejs 处理错误</span></span>
<span class="line"><span>&quot;id-length&quot;: 0,//变量名长度</span></span>
<span class="line"><span>&quot;indent&quot;: [2, 4],//缩进风格</span></span>
<span class="line"><span>&quot;init-declarations&quot;: 0,//声明时必须赋初值</span></span>
<span class="line"><span>&quot;key-spacing&quot;: [0, { &quot;beforeColon&quot;: false, &quot;afterColon&quot;: true }],//对象字面量中冒号的前后空格</span></span>
<span class="line"><span>&quot;lines-around-comment&quot;: 0,//行前/行后备注</span></span>
<span class="line"><span>&quot;max-depth&quot;: [0, 4],//嵌套块深度</span></span>
<span class="line"><span>&quot;max-len&quot;: [0, 80, 4],//字符串最大长度</span></span>
<span class="line"><span>&quot;max-nested-callbacks&quot;: [0, 2],//回调嵌套深度</span></span>
<span class="line"><span>&quot;max-params&quot;: [0, 3],//函数最多只能有3个参数</span></span>
<span class="line"><span>&quot;max-statements&quot;: [0, 10],//函数内最多有几个声明</span></span>
<span class="line"><span>&quot;new-cap&quot;: 2,//函数名首行大写必须使用new方式调用，首行小写必须用不带new方式调用</span></span>
<span class="line"><span>&quot;new-parens&quot;: 2,//new时必须加小括号</span></span>
<span class="line"><span>&quot;newline-after-var&quot;: 2,//变量声明后是否需要空一行</span></span>
<span class="line"><span>&quot;object-curly-spacing&quot;: [0, &quot;never&quot;],//大括号内是否允许不必要的空格</span></span>
<span class="line"><span>&quot;object-shorthand&quot;: 0,//强制对象字面量缩写语法</span></span>
<span class="line"><span>&quot;one-var&quot;: 1,//连续声明</span></span>
<span class="line"><span>&quot;operator-assignment&quot;: [0, &quot;always&quot;],//赋值运算符 += -=什么的</span></span>
<span class="line"><span>&quot;operator-linebreak&quot;: [2, &quot;after&quot;],//换行时运算符在行尾还是行首</span></span>
<span class="line"><span>&quot;padded-blocks&quot;: 0,//块语句内行首行尾是否要空行</span></span>
<span class="line"><span>&quot;prefer-const&quot;: 0,//首选const</span></span>
<span class="line"><span>&quot;prefer-spread&quot;: 0,//首选展开运算</span></span>
<span class="line"><span>&quot;prefer-reflect&quot;: 0,//首选Reflect的方法</span></span>
<span class="line"><span>&quot;quotes&quot;: [1, &quot;single&quot;],//引号类型 \`\` &quot;&quot; &#39;&#39;</span></span>
<span class="line"><span>&quot;quote-props&quot;:[2, &quot;always&quot;],//对象字面量中的属性名是否强制双引号</span></span>
<span class="line"><span>&quot;radix&quot;: 2,//parseInt必须指定第二个参数</span></span>
<span class="line"><span>&quot;id-match&quot;: 0,//命名检测</span></span>
<span class="line"><span>&quot;require-yield&quot;: 0,//生成器函数必须有yield</span></span>
<span class="line"><span>&quot;semi&quot;: [2, &quot;always&quot;],//语句强制分号结尾</span></span>
<span class="line"><span>&quot;semi-spacing&quot;: [0, {&quot;before&quot;: false, &quot;after&quot;: true}],//分号前后空格</span></span>
<span class="line"><span>&quot;sort-vars&quot;: 0,//变量声明时排序</span></span>
<span class="line"><span>&quot;space-after-keywords&quot;: [0, &quot;always&quot;],//关键字后面是否要空一格</span></span>
<span class="line"><span>&quot;space-before-blocks&quot;: [0, &quot;always&quot;],//不以新行开始的块{前面要不要有空格</span></span>
<span class="line"><span>&quot;space-before-function-paren&quot;: [0, &quot;always&quot;],//函数定义时括号前面要不要有空格</span></span>
<span class="line"><span>&quot;space-in-parens&quot;: [0, &quot;never&quot;],//小括号里面要不要有空格</span></span>
<span class="line"><span>&quot;space-infix-ops&quot;: 0,//中缀操作符周围要不要有空格</span></span>
<span class="line"><span>&quot;space-return-throw-case&quot;: 2,//return throw case后面要不要加空格</span></span>
<span class="line"><span>&quot;space-unary-ops&quot;: [0, { &quot;words&quot;: true, &quot;nonwords&quot;: false }],//一元运算符的前/后要不要加空格</span></span>
<span class="line"><span>&quot;spaced-comment&quot;: 0,//注释风格要不要有空格什么的</span></span>
<span class="line"><span>&quot;strict&quot;: 2,//使用严格模式</span></span>
<span class="line"><span>&quot;use-isnan&quot;: 2,//禁止比较时使用NaN，只能用isNaN()</span></span>
<span class="line"><span>&quot;valid-jsdoc&quot;: 0,//jsdoc规则</span></span>
<span class="line"><span>&quot;valid-typeof&quot;: 2,//必须使用合法的typeof的值</span></span>
<span class="line"><span>&quot;vars-on-top&quot;: 2,//var必须放在作用域顶部</span></span>
<span class="line"><span>&quot;wrap-iife&quot;: [2, &quot;inside&quot;],//立即执行函数表达式的小括号风格</span></span>
<span class="line"><span>&quot;wrap-regex&quot;: 0,//正则表达式字面量用小括号包起来</span></span>
<span class="line"><span>&quot;yoda&quot;: [2, &quot;never&quot;]//禁止尤达条件</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br><span class="line-number">92</span><br><span class="line-number">93</span><br><span class="line-number">94</span><br><span class="line-number">95</span><br><span class="line-number">96</span><br><span class="line-number">97</span><br><span class="line-number">98</span><br><span class="line-number">99</span><br><span class="line-number">100</span><br><span class="line-number">101</span><br><span class="line-number">102</span><br><span class="line-number">103</span><br><span class="line-number">104</span><br><span class="line-number">105</span><br><span class="line-number">106</span><br><span class="line-number">107</span><br><span class="line-number">108</span><br><span class="line-number">109</span><br><span class="line-number">110</span><br><span class="line-number">111</span><br><span class="line-number">112</span><br><span class="line-number">113</span><br><span class="line-number">114</span><br><span class="line-number">115</span><br><span class="line-number">116</span><br><span class="line-number">117</span><br><span class="line-number">118</span><br><span class="line-number">119</span><br><span class="line-number">120</span><br><span class="line-number">121</span><br><span class="line-number">122</span><br><span class="line-number">123</span><br><span class="line-number">124</span><br><span class="line-number">125</span><br><span class="line-number">126</span><br><span class="line-number">127</span><br><span class="line-number">128</span><br><span class="line-number">129</span><br><span class="line-number">130</span><br><span class="line-number">131</span><br><span class="line-number">132</span><br><span class="line-number">133</span><br><span class="line-number">134</span><br><span class="line-number">135</span><br><span class="line-number">136</span><br><span class="line-number">137</span><br><span class="line-number">138</span><br><span class="line-number">139</span><br><span class="line-number">140</span><br><span class="line-number">141</span><br><span class="line-number">142</span><br><span class="line-number">143</span><br><span class="line-number">144</span><br><span class="line-number">145</span><br><span class="line-number">146</span><br><span class="line-number">147</span><br><span class="line-number">148</span><br><span class="line-number">149</span><br><span class="line-number">150</span><br><span class="line-number">151</span><br><span class="line-number">152</span><br><span class="line-number">153</span><br><span class="line-number">154</span><br><span class="line-number">155</span><br><span class="line-number">156</span><br><span class="line-number">157</span><br><span class="line-number">158</span><br><span class="line-number">159</span><br><span class="line-number">160</span><br><span class="line-number">161</span><br><span class="line-number">162</span><br><span class="line-number">163</span><br><span class="line-number">164</span><br><span class="line-number">165</span><br><span class="line-number">166</span><br><span class="line-number">167</span><br><span class="line-number">168</span><br><span class="line-number">169</span><br><span class="line-number">170</span><br><span class="line-number">171</span><br><span class="line-number">172</span><br><span class="line-number">173</span><br><span class="line-number">174</span><br></div></div><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#267F99;--shiki-dark:#E5C07B;">module</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#267F99;--shiki-dark:#E5C07B;">exports</span><span style="--shiki-light:#000000;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> { </span><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 此项是用来告诉eslint找当前配置文件不能往父级查找</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">	root</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">	// 此项是用来指定eslint解析器的，解析器必须符合规则，babel-eslint解析器是对babel解析器的包装使其与ESLint解析</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">	parser</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;babel-eslint&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">	// 此项是用来指定javaScript语言类型和风格，sourceType用来指定js导入的方式，默认是script，此处设置为module，指某块导入方式</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">	parserOptions</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">		sourceType</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;module&#39;</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">	},</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">	// 此项指定环境的全局变量，下面的配置指定为浏览器环境</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">	env</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">		browser</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">	},</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">	// https://github.com/feross/standard/blob/master/RULES.md#javascript-standard-style</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">	// 此项是用来配置标准的js风格，就是说写代码的时候要规范的写，如果你使用vs-code我觉得应该可以避免出错</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">	extends</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;standard&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// required to lint *.vue files</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">	// 此项是用来提供插件的，插件名称省略了eslint-plugin-，下面这个配置是用来规范html的</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">	plugins</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> [</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">		&#39;html&#39;</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">	], </span><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// add your custom rules here</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">	// 下面这些rules是用来设置从插件来的规范代码的规则，使用必须去掉前缀eslint-plugin-</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">	// 主要有如下的设置规则，可以设置字符串也可以设置数字，两者效果一致</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">	// &quot;off&quot; -&gt; 0 关闭规则</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">	// &quot;warn&quot; -&gt; 1 开启警告规则</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">	// &quot;error&quot; -&gt; 2 开启错误规则</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">	// 了解了上面这些，下面这些代码相信也看的明白了</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">	rules</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">		// allow async-await</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">		&#39;generator-star-spacing&#39;</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;off&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">		// allow debugger during development</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">		&#39;no-debugger&#39;</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#001080;--shiki-dark:#E5C07B;"> process</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#001080;--shiki-dark:#E5C07B;">env</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#0070C1;--shiki-dark:#E06C75;">NODE_ENV</span><span style="--shiki-light:#000000;--shiki-dark:#56B6C2;"> ===</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;production&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#C678DD;"> ?</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;error&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#C678DD;"> :</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;off&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">		// js语句结尾必须使用分号</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">		&#39;semi&#39;</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&#39;off&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&#39;always&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">],</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">		// 三等号</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">		&#39;eqeqeq&#39;</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#098658;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">		// 强制在注释中 // 或 /* 使用一致的空格</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">		&#39;spaced-comment&#39;</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#098658;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">		// 关键字后面使用一致的空格</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">		&#39;keyword-spacing&#39;</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#098658;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">		// 强制在 function的左括号之前使用一致的空格</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">		&#39;space-before-function-paren&#39;</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#098658;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">		// 引号类型</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">		&#39;quotes&#39;</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#098658;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&#39;single&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">],</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">		// 禁止出现未使用过的变量</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">		// &#39;no-unused-vars&#39;: 0,</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">		// 要求或禁止末尾逗号</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">		&#39;comma-dangle&#39;</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#098658;--shiki-dark:#D19A66;"> 0</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">	}</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br></div></div><h2 id="使用-eslint-自动调整-import-代码顺序" tabindex="-1">使用 eslint 自动调整 import 代码顺序 <a class="header-anchor" href="#使用-eslint-自动调整-import-代码顺序" aria-label="Permalink to &quot;使用 eslint 自动调整 import 代码顺序&quot;">​</a></h2><p>提供 sort-imports 能力的插件有好几个，试了一下，eslint-plugin-simple-import-sort 最靠谱。</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">yarn</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> -D</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> eslint-plugin-simple-import-sort</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>配置 在 .eslintrc 中分别加入：</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#E06C75;">  &quot;plugins&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: [</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">    &quot;simple-import-sort&quot;</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">  ],</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#E06C75;">  &quot;rules&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#E06C75;">    &quot;simple-import-sort/imports&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&quot;error&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#E06C75;">    &quot;simple-import-sort/exports&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&quot;error&quot;</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>体验 执行 eslint --fix src/**，完美。</p><h2 id="react相关" tabindex="-1">React相关 <a class="header-anchor" href="#react相关" aria-label="Permalink to &quot;React相关&quot;">​</a></h2><h3 id="react-编译模式配置" tabindex="-1">React 编译模式配置 <a class="header-anchor" href="#react-编译模式配置" aria-label="Permalink to &quot;React 编译模式配置&quot;">​</a></h3><p>如果 React 使用的是新的编译模式（无需手动导入 React），需要在 extends 中加入 plugin:react/jsx-runtime。</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#E06C75;">  &quot;extends&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: [</span></span>
<span class="line highlighted"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">    &quot;plugin:react/jsx-runtime&quot;</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">  ]</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>同时 tsconfig 文件中的 <code>“jsx”: “react-jsx” </code>也是对应的新模式。</p><h3 id="react-属性自动排序规则配置" tabindex="-1">React 属性自动排序规则配置 <a class="header-anchor" href="#react-属性自动排序规则配置" aria-label="Permalink to &quot;React 属性自动排序规则配置&quot;">​</a></h3><p>安装依赖：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">ni</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> -D</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> eslint-plugin-react</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>确保 eslint 配置文件中 extends 的部分存在 <code>plugin:react/recommended</code>。</p><p>React 组件的属性可以借助 eslint 的能力来进行自动排序，在配置文件的 rule 中打开即可。</p><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>{</span></span>
<span class="line"><span>  &quot;rules&quot;: {</span></span>
<span class="line"><span>    &quot;react/jsx-sort-props&quot;: [</span></span>
<span class="line"><span>      &quot;error&quot;,</span></span>
<span class="line"><span>      {</span></span>
<span class="line"><span>        &quot;callbacksLast&quot;: true</span></span>
<span class="line"><span>      }</span></span>
<span class="line"><span>    ]</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="contributors" tabindex="-1">Contributors <a class="header-anchor" href="#contributors" aria-label="Permalink to &quot;Contributors&quot;">​</a></h2>`,179);function b(d,k,m,q,g,y){const n=i,a=p,e=l;return u(),r("div",null,[h,s(n,{readTime:"28",words:"7.3k"}),s(a),s(e)])}const A=t(c,[["render",b]]);export{x as __pageData,A as default};
