import{_ as p,a as e,b as l}from"./chunks/PageInfo.vue_vue_type_script_setup_true_lang.BCVHfIj7.js";import{_ as t,c as h,I as s,a7 as k,o as r}from"./chunks/framework.DGCt2JJv.js";import"./chunks/dayjs.min.DZyl58SH.js";const F=JSON.parse('{"title":"Git提交规范 Git Hook","description":"","frontmatter":{},"headers":[],"relativePath":"standard/git提交规范.md","filePath":"standard/git提交规范.md","lastUpdated":1711301918000}'),d={name:"standard/git提交规范.md"},c=k(`<h1 id="git提交规范-git-hook" tabindex="-1">Git提交规范 Git Hook <a class="header-anchor" href="#git提交规范-git-hook" aria-label="Permalink to &quot;Git提交规范 Git Hook&quot;">​</a></h1><nav class="table-of-contents"><ul><li><a href="#自动配置husky-推荐">自动配置husky (推荐)</a></li><li><a href="#快速配置">快速配置</a></li><li><a href="#提交代码时的检验-husky-lint-staged">提交代码时的检验 husky + lint-staged</a><ul><li><a href="#husky">husky</a></li><li><a href="#lint-staged">lint-staged</a></li></ul></li><li><a href="#扩展-simple-git-hooks">扩展 simple-git-hooks</a></li><li><a href="#规范commit-message信息">规范commit message信息</a></li><li><a href="#安装">安装</a></li><li><a href="#husky与yorkie的不同">husky与yorkie的不同</a></li><li><a href="#安装husky依赖及初始化">安装husky依赖及初始化</a></li><li><a href="#husky-不起作用解决方案">Husky 不起作用解决方案</a></li><li><a href="#contributors">Contributors</a></li></ul></nav><div class="tip custom-block"><p class="custom-block-title">提示</p><p>git hook 一般结合各种 lint，在 git 提交代码的时候进行代码风格校验，如果校验没通过，则不会进行提交。需要开发者自行修改后再次进行提交.</p><p>最有效的解决方案就是将 Lint 校验放到本地，常见做法是使用 husky 或者 pre-commit 在本地提交之前先做一次 Lint 校验。</p></div><h2 id="自动配置husky-推荐" tabindex="-1">自动配置husky (推荐) <a class="header-anchor" href="#自动配置husky-推荐" aria-label="Permalink to &quot;自动配置husky (推荐)&quot;">​</a></h2><p>yarn add husky --dev # must install</p><p>::: tabs</p><p>@tab npm</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">npx</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> husky-init</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> install</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>@tab Yarn 1</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">npx</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> husky-init</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">yarn</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>@tab:active Yarn 2</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">yarn</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> dlx</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> husky-init</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> --yarn2</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">yarn</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>@tab:active pnpm</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> dlx</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> husky-init</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> install</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>::: 它将设置 husky，修改package.json并创建一个pre-commit您可以编辑的示例挂钩。默认情况下，它将npm test在您提交时运行。</p><p>把示例 npm test 修改成 yarn lint-staged 或者 您自己定义的命令</p><p>在 package.json中添加 lint-staged命令</p><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>&quot;lint-staged&quot;: &quot;lint-staged --allow-empty&quot;,</span></span>
<span class="line"><span>&quot;lint-staged:js&quot;: &quot;eslint --ext .js,.jsx,.ts,.tsx &quot;,</span></span>
<span class="line"><span>&quot;lint-staged&quot;: {</span></span>
<span class="line"><span>    &quot;**/*.{js,jsx,ts,tsx}&quot;: &quot;yarn run lint-staged:js&quot;,</span></span>
<span class="line"><span>    &quot;**/*.{js,jsx,tsx,ts,less,md,json}&quot;: [</span></span>
<span class="line"><span>      &quot;prettier --write&quot;</span></span>
<span class="line"><span>    ]</span></span>
<span class="line"><span>  },</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>在 git commit 的时候，就会触发 .husky/pre-commit 文件下 的命令行 yarn lint-staged或者 您自己定义的命令</p><p>在检查代码成功的时候会自动格式化代码然后帮您提交，如果检测到错误就会停止提交并告知错误行，及时改正后可以再次提交</p><h2 id="快速配置" tabindex="-1">快速配置 <a class="header-anchor" href="#快速配置" aria-label="Permalink to &quot;快速配置&quot;">​</a></h2><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">npx</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> mrm</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> lint-staged</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>会自动安装 lint-staged 和 husky 并且在 package.json 里写入 lint-staged。</p><p>注意：mrm 是一个自动化工具，它将根据 package.json 依赖项中的代码质量工具来安装和配置 husky 和 lint-staged，因此请确保在此之前安装并配置所有代码质量工具，如 Prettier 和 ESlint。</p><p>如果上面顺利会在 package.json 里写入 lint-staged，可以自行修改让它支持 .vue 文件的校验：</p><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>{</span></span>
<span class="line"><span>    &quot;lint-staged&quot;: {</span></span>
<span class="line"><span>        &quot;*.{js,vue}&quot;: &quot;eslint --cache --fix&quot;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>启动 git hooks</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">npx</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> husky</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> install</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>经过上面的命令后，v6 版本的 husky 会在项目根目录新建一个 .husky 目录。如果是 v4 版本的则会写入到 package.json 里。</p><p>创建 pre-commit 钩子</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">npx</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> husky</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> .husky/pre-commit</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &quot;npx lint-staged&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>到这里后，git commit 前自动执行代码校验和修复的功能就算完成了。然后你可以试试修改文件，然后提交试试。</p><p>运行git commit时会自动调用husky添加的hook</p><h2 id="提交代码时的检验-husky-lint-staged" tabindex="-1">提交代码时的检验 husky + lint-staged <a class="header-anchor" href="#提交代码时的检验-husky-lint-staged" aria-label="Permalink to &quot;提交代码时的检验 husky + lint-staged&quot;">​</a></h2><p>只是单纯引入 eslint 校验如果不强制要求就等于没做，总会有人偷懒，所以还是要约束一下。</p><p>husky用于git执行钩子前做校验,我们只想校验我们自己提交的代码，这个时候就可以使用 husky，</p><p>lint-staged用于只校验git暂存区的文件。</p><p>这里要实现的功能是在git commit命令运行时先校验lint（包括eslint）是否通过，未通过则不予commit。</p><h3 id="husky" tabindex="-1">husky <a class="header-anchor" href="#husky" aria-label="Permalink to &quot;husky&quot;">​</a></h3><p>husky 8.x 的使用参考 官网 <a href="https://typicode.github.io/husky/#/?id=usage" target="_blank" rel="noreferrer">husky-usage</a></p><p>推荐查看<a href="https://typicode.github.io/husky/#/?id=automatic-recommended" target="_blank" rel="noreferrer">官网安装</a></p><h4 id="手动安装" tabindex="-1">手动安装 <a class="header-anchor" href="#手动安装" aria-label="Permalink to &quot;手动安装&quot;">​</a></h4><p>a. 初始化</p><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>// 初始化</span></span>
<span class="line"><span>npx husky-init &amp;&amp; npm install</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>初始化后根目录会出现一个新目录 .husky 下面有 .husky/pre-commit 和 .husky/_/.husky.sh 等</p><p>b. 在安装后自动启用 Git 挂钩，请编辑 package.json</p><div class="warning custom-block"><p class="custom-block-title">警告</p><p>注: 需要npm版本Version 7.x(npm set-script命令需要7.x)</p><p>ps: 执行yarn set-script prepare &quot;husky install&quot; 会报错：error Command &quot;set-script&quot; not found.</p><p>prepare 是 NPM 操作生命周期中的一环，在执行 install 的时候会按生命周期顺序执行相应钩子： NPM7： preinstall -&gt; install -&gt; postinstall -&gt; prepublish -&gt; preprepare -&gt; prepare -&gt; postprepare</p></div><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> set-script</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> prepare</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &quot;husky install&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> prepare</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>配置如下</p><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>// package.json</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>  &quot;scripts&quot;: {</span></span>
<span class="line"><span>    &quot;prepare&quot;: &quot;husky install&quot;</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>c.创建一条 pre-commit hook</p><p>将命令添加到钩子或创建新命令 husky add</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">//</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> 执行下面命令会</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> 将命令添加到钩子或创建新命令，请使用</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> husky</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">fil</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">e&gt; [cmd]（不要忘记先运行 husky install）上面已经初始化过了。</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">npx</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> husky</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> .husky/pre-commit</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &quot;npm test&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>执行该命令后，会看到.husky/目录下新增了一个名为pre-commit的shell脚本。</p><p>这样，在之后执行git commit命令时会先触发pre-commit这个脚本。</p><p>d. 开始测试</p><p>根据我们 eslint 配置好的校验，故意给我们的文件做个错误示例，看会不会 commit 时 自动执行 .husky/pre-commit 中写的指令 npm test 对我们的代码进行校验</p><p>笔者特地给 某个文件的 双引号 改为 单引号，然后配置一个没有 --fix 自动修复的指令， 当执行了</p><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>&quot;scripts&quot;: {</span></span>
<span class="line"><span>  &quot;test&quot;: &quot;npm run lint&quot;,</span></span>
<span class="line"><span>  &quot;lint:fix&quot;: &quot;eslint --fix --ext .js,.vue src&quot;,</span></span>
<span class="line"><span>  &quot;lint&quot;: &quot;eslint --ext .js,.vue src&quot;,</span></span>
<span class="line"><span>},</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>当执行以下commit时</p><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>git add .</span></span>
<span class="line"><span>git commit -m &quot;test husky pre-commit&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>出现了报错, 提示应该根据 eslintrc 配置好的使用 单引号 singlequote</p><p>至此配置 husky 成功</p><div class="tip custom-block"><p class="custom-block-title">提示</p><p>PS： 出错后可以继续使用 npm run lint:fix 修复错误</p></div><p>e. Uninstall(卸载husky)</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> uninstall</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> husky</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> --unset</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> core.hooksPath</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h4 id="如何关闭" tabindex="-1">如何关闭 <a class="header-anchor" href="#如何关闭" aria-label="Permalink to &quot;如何关闭&quot;">​</a></h4><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 删除husky依赖即可</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">yarn</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> remove</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> huksy</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h4 id="如何跳过某一个检查" tabindex="-1">如何跳过某一个检查 <a class="header-anchor" href="#如何跳过某一个检查" aria-label="Permalink to &quot;如何跳过某一个检查&quot;">​</a></h4><p>有时候我们因为一些原因，想绕过hooks检查，可通过下方命令实现：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 加上 --no-verify即可跳过git hook校验（--no-verify 简写为 -n）</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> commit</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &quot;xxx&quot;</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> --no-verify</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="lint-staged" tabindex="-1">lint-staged <a class="header-anchor" href="#lint-staged" aria-label="Permalink to &quot;lint-staged&quot;">​</a></h3><p>前面说了 lint-staged 用于只校验git暂存区的文件。在代码提交之前，进行代码规则检查能够确保进入git库的代码都是符合代码规则的。但是整个项目上运行lint速度会很慢</p><p>优点：lint-staged能够让lint只检测暂存区的文件，所以速度很快。 lint-staged过滤文件采用glob模式。</p><p>a. 安装 lint-staged</p><p>::: tabs</p><p>@tab npm</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> i</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> -D</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> lint-staged</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>@tab Yarn</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">yarn</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> lint-staged</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>:::</p><p>b. 配置 lint-staged</p><p>这里其实就是配置将我们上面配的 husky 执行 的lint 放到 lint-staged</p><p>git commit时触发pre-commit钩子，运行lint-staged命令，对*.js等执行eslint命令。eslint要提前配置好。</p><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>// package.json</span></span>
<span class="line"><span>&quot;scripts&quot;: {</span></span>
<span class="line"><span>  &quot;lint&quot;: &quot;lint-staged&quot;, // 此处将之前的lint 改为 lint-stage的，将之前lint的指令放到 下面 lint-staged</span></span>
<span class="line"><span>},</span></span>
<span class="line"><span>&quot;lint-staged&quot;: {</span></span>
<span class="line"><span>  &quot;*.{js,vue}&quot;: [</span></span>
<span class="line"><span>      &quot;eslint --ext .js,.vue src&quot; // 执行eslint 校验</span></span>
<span class="line"><span>    // &quot;git add&quot; // 也可以执行 eslint --fix 这样直接配合 git add ，fix 后 重新 git add，我这里是有错误 直接 停止 --ext</span></span>
<span class="line"><span>  ]</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>再次模拟之前 的故意写个 错误的 eslint 示范，比如句尾加个 &#39;;&#39;，或者改单引号为双引号，结果报错</p><div class="tip custom-block"><p class="custom-block-title">提示</p><p>PS： 出错后可以继续使用 npm run lint:fix 修复错误</p></div><p>至此配置 lint-staged 成功</p><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>执行 npx lint-staged --help 命令可以看到相关的所有参数如下：</span></span>
<span class="line"><span></span></span>
<span class="line"><span>用法: lint-staged [options]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Options:</span></span>
<span class="line"><span>-V, --version                      输出版本号</span></span>
<span class="line"><span>--allow-empty                      当任务撤消所有分阶段的更改时允许空提交（默认值：false）</span></span>
<span class="line"><span>-c, --config [path]                配置文件的路径</span></span>
<span class="line"><span>-d, --debug                        打印其他调试信息（默认值：false）</span></span>
<span class="line"><span>-p, --concurrent &lt;parallel tasks&gt;  要同时运行的任务数，或者为false则要连续运行任务（默认值：true）</span></span>
<span class="line"><span>-q, --quiet                        自己的控制台输出（默认值：false）</span></span>
<span class="line"><span>-r, --relative                     将相对文件路径传递给任务（默认值：false）</span></span>
<span class="line"><span>-x, --shell                        跳过任务解析以更好地支持shell（默认值：false）</span></span>
<span class="line"><span>-h, --help                         输出用法信息</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>--allow-empty：使用此参数允许创建空的git提交。默认情况下，当LITER任务撤消所有阶段性的更改时，LITET阶段将抛出一个错误，并中止提交。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p>lint-staged 配置位于项目 .husky 目录下 lintstagedrc.js</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#267F99;--shiki-dark:#E5C07B;">module</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#267F99;--shiki-dark:#E5C07B;">exports</span><span style="--shiki-light:#000000;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">	// 对指定格式文件 在提交的时候执行相应的修复命令</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">	&#39;*.{js,jsx,ts,tsx}&#39;</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&#39;eslint --fix&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&#39;prettier --write&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">],</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">	&#39;{!(package)*.json,*.code-snippets,.!(browserslist)*rc}&#39;</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&#39;prettier --write--parser json&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">],</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">	&#39;package.json&#39;</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&#39;prettier --write&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">],</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">	&#39;*.vue&#39;</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&#39;eslint --fix&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&#39;stylelint --fix&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&#39;prettier --write&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&#39;git add .&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">],</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">	&#39;*.{scss,less,styl,css,html}&#39;</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&#39;stylelint --fix&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&#39;prettier --write&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&#39;git add .&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">],</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">	&#39;*.md&#39;</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&#39;prettier --write&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">],</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>	&quot;prepare&quot;: &quot;husky install&quot;,</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>	&quot;husky&quot;: &quot;^8.0.1&quot;,</span></span>
<span class="line"><span>	&quot;lint-staged&quot;: &quot;^13.0.3&quot;,</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>	&quot;husky&quot;: {</span></span>
<span class="line"><span>		&quot;hooks&quot;: {</span></span>
<span class="line"><span>			&quot;pre-commit&quot;: &quot;lint-staged&quot;</span></span>
<span class="line"><span>		}</span></span>
<span class="line"><span>	},</span></span>
<span class="line"><span>	&quot;lint-staged&quot;: {</span></span>
<span class="line"><span>		&quot;./**/*.{js,vue,ts}&quot;: [</span></span>
<span class="line"><span>			&quot;vue-cli-service lint --fix&quot;,</span></span>
<span class="line"><span>			&quot;git add&quot;</span></span>
<span class="line"><span>		]</span></span>
<span class="line"><span>	}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="扩展-simple-git-hooks" tabindex="-1">扩展 simple-git-hooks <a class="header-anchor" href="#扩展-simple-git-hooks" aria-label="Permalink to &quot;扩展 simple-git-hooks&quot;">​</a></h2><p><a href="https://www.5axxw.com/wiki/content/dcze0p" target="_blank" rel="noreferrer">https://www.5axxw.com/wiki/content/dcze0p</a></p><h2 id="规范commit-message信息" tabindex="-1">规范commit message信息 <a class="header-anchor" href="#规范commit-message信息" aria-label="Permalink to &quot;规范commit message信息&quot;">​</a></h2><p>类似的，我们也可以添加commit-msg钩子，来规范我们的commit message信息</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">npx</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> husky</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> .husky/commit-msg</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;npx --no-install commitlint --edit &quot;$1&quot;&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>安装 commitlint</li></ul><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> i</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> @commitlint/cli</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> @commitlint/config-conventional</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> -D</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>配置 commitlint.config.js</li></ul><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#56B6C2;">echo</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &quot;module.exports = {extends: [&#39;@commitlint/config-conventional&#39;]};&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">commitlint.config.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>commit-msg 在此阶段，可用 @commitlint/cli @commitlint/config-conventional 对提交信息进行验证。但是记信息格式规范真的太太太太麻烦了，所以可用 commitizen cz-git 生成提交信息。</p><p>执行<code>yarn add @commitlint/cli @commitlint/config-conventional -D</code>安装commitlint相关依赖，用来帮助我们在多人开发时，遵守 git 提交约定。</p><p>执行<code>echo &quot;module.exports = {extends: [&#39;@commitlint/config-conventional&#39;]}&quot; &gt; commitlint.config.js</code>在根目录创建 commitlint.config.js 文件（当然也可以手动创建此文件），其内容如下所示：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#267F99;--shiki-dark:#E5C07B;">module</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#267F99;--shiki-dark:#E5C07B;">exports</span><span style="--shiki-light:#000000;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">	extends</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> [</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">		&#39;@commitlint/config-conventional&#39;</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">	],</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">	// 以下时我们自定义的规则</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">	rules</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">		&#39;type-enum&#39;</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> [</span></span>
<span class="line"><span style="--shiki-light:#098658;--shiki-dark:#D19A66;">			2</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">			&#39;always&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">			[</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">				&#39;bug&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 此项特别针对bug号，用于向测试反馈bug列表的bug修改情况</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">				&#39;feat&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 新功能（feature）</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">				&#39;fix&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 修补bug</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">				&#39;docs&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 文档（documentation）</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">				&#39;style&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 格式（不影响代码运行的变动）</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">				&#39;refactor&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 重构（即不是新增功能，也不是修改bug的代码变动）</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">				&#39;test&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 增加测试</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">				&#39;chore&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 构建过程或辅助工具的变动</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">				&#39;revert&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// feat(pencil): add ‘graphiteWidth’ option (撤销之前的commit)</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">				&#39;merge&#39;</span><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"> // 合并分支， 例如： merge（前端页面）： feature-xxxx修改线程地址</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">			]</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">		]</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">	}</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>执行<code>yarn husky add .husky/commit-msg &#39;yarn commitlint --edit &quot;$1&quot;&#39;</code>之后，会看到在根目录的.husky文件夹下多了一个 commit-msg 文件，其内容如下：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">#!/bin/sh</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#56B6C2;">.</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &quot;$(</span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">dirname</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &quot;</span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">$0</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&quot;)/_/husky.sh&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">yarn</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> commitlint</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> --edit</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &quot;</span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">$1</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>紧接着，我们需要将上一步添加的钩子添加到git中去，执行<code>git add .husky/commit-msg</code></p><p>执行<code>yarn husky add .husky/pre-commit &#39;yarn lint-staged --allow-empty &quot;$1&quot;&#39;</code>之后，会看到在根目录的.husky文件夹下多了一个 pre-commit 文件，其内容如下：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">#!/bin/sh</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#56B6C2;">.</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &quot;$(</span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">dirname</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &quot;</span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">$0</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&quot;)/_/husky.sh&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">yarn</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> lint-staged</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> --allow-empty</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &quot;</span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">$1</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>同样的，我们需要将上一步添加的钩子添加到git中去，执行<code>git add .husky/pre-commit</code></p><h1 id="yorkie" tabindex="-1">yorkie <a class="header-anchor" href="#yorkie" aria-label="Permalink to &quot;yorkie&quot;">​</a></h1><p>fork自husky，做了一些改动，如下：</p><p>优先考虑位于.git目录旁边的package.json，而不是硬编码的向上搜索。避免了在lerna 仓库中的根包和子包都依赖于husky的问题，它会混淆并用错误的路径，双重更新根git钩子。</p><p>更改在package.json中hooks的位置</p><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>before：</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>  &quot;scripts&quot;: {</span></span>
<span class="line"><span>    &quot;precommit&quot;: &quot;foo&quot;</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>After：</span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>  &quot;gitHooks&quot;: {</span></span>
<span class="line"><span>    &quot;pre-commit&quot;: &quot;foo&quot;</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><p>vue脚手架vue-cli在初始化完项目后，@vue/cli-service 会自动安装 yorkie，它会让你在 package.json 的 gitHooks 字段中方便地指定 Git hook：</p><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>{</span></span>
<span class="line"><span>  &quot;gitHooks&quot;: {</span></span>
<span class="line"><span>    &quot;pre-commit&quot;: &quot;lint-staged&quot; // 配置脚本</span></span>
<span class="line"><span>  },</span></span>
<span class="line"><span>   &quot;lint-staged&quot;: {</span></span>
<span class="line"><span>    &quot;*.{js,vue}&quot;: [</span></span>
<span class="line"><span>      &quot;vue-cli-service lint&quot;,</span></span>
<span class="line"><span>      &quot;git add&quot;</span></span>
<span class="line"><span>    ]</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h2 id="husky与yorkie的不同" tabindex="-1">husky与yorkie的不同 <a class="header-anchor" href="#husky与yorkie的不同" aria-label="Permalink to &quot;husky与yorkie的不同&quot;">​</a></h2><p>husky v7版本仅支持修改.husky/xxx目录下的配置脚本，v4版本支持package.json中通过husky: {hooks: {&quot;pre-commit&quot;: xxx} }的方式更新脚本</p><p>yorkie支持在package.json中通过&quot;gitHooks&quot;: {&quot;pre-commit&quot;: xxx}的方式更新脚本。</p><p>yorkie fork 自 husky 并且与后者不兼容。</p><h2 id="安装husky依赖及初始化" tabindex="-1">安装husky依赖及初始化 <a class="header-anchor" href="#安装husky依赖及初始化" aria-label="Permalink to &quot;安装husky依赖及初始化&quot;">​</a></h2><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>pnpm add husky -Dw</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 初始化husky</span></span>
<span class="line"><span>npx husky install</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 添加 pre-commit hooks</span></span>
<span class="line"><span>npx husky add  .husky/pre-commit &quot;npx lint-staged&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 添加 commit-msg hooks</span></span>
<span class="line"><span>npx husky add  .husky/commit-msg &#39;npx --no -- commitlint --edit &quot;$1&quot;&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>安装lint-staged依赖 pnpm add lint-staged -Dw 复制代码 .lintstagedrc</p><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span></span></span>
<span class="line"><span>{</span></span>
<span class="line"><span>&quot;packages/**/*.{vue,ts,js}&quot;: [</span></span>
<span class="line"><span>&quot;eslint --fix&quot;</span></span>
<span class="line"><span>]</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>安装commitlint相关依赖及配置</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> @commitlint/cli</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> @commitlint/config-conventional</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> commitlint-config-cz</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> cz-customizable</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> -Dw</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>package.json</p><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>{</span></span>
<span class="line"><span>// ...</span></span>
<span class="line"><span>  &quot;scripts&quot;:{</span></span>
<span class="line"><span>      &quot;commit&quot;: &quot;node ./node_modules/cz-customizable/standalone.js&quot;,</span></span>
<span class="line"><span>      &quot;preinstall&quot;: &quot;npx only-allow pnpm&quot;</span></span>
<span class="line"><span>   },</span></span>
<span class="line"><span>// ...</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>.commitlintrc</p><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>{</span></span>
<span class="line"><span>&quot;extends&quot;: [&#39;@commitlint/config-conventional&#39;, &#39;cz&#39;]</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>汉化默认的commit提示 .cz-config.js</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#267F99;--shiki-dark:#E5C07B;">module</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#267F99;--shiki-dark:#E5C07B;">exports</span><span style="--shiki-light:#000000;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">	types</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> [</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">		{ </span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">value</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;feat&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;✨ Features | 新功能&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> },</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">		{ </span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">value</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;fix&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;🐛 Bug Fixes | Bug 修复&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> },</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">		{ </span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">value</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;init&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;🎉 Init | 初始化&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> },</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">		{ </span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">value</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;docs&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;✏️ Documentation | 文档&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> },</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">		{ </span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">value</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;style&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;💄 Styles | 风格&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> },</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">		{ </span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">value</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;refactor&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;♻️ Code Refactoring | 代码重构&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> },</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">		{ </span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">value</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;perf&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;⚡ Performance Improvements | 性能优化&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> },</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">		{ </span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">value</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;test&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;✅ Tests | 测试&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> },</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">		{ </span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">value</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;revert&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;⏪ Revert | 回退&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> },</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">		{ </span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">value</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;build&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;📦‍ Build System | 打包构建&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> },</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">		{ </span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">value</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;chore&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;🚀 Chore | 构建/工程依赖/工具&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> },</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">		{ </span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">value</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;ci&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;👷 Continuous Integration | CI 配置&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> }</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">	],</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">	// scopes: [{ name: &#39;accounts&#39; }, { name: &#39;admin&#39; }, { name: &#39;exampleScope&#39; }, { name: &#39;changeMe&#39; }],</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">	allowTicketNumber</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> false</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">	isTicketNumberRequired</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> false</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">	ticketNumberPrefix</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;TICKET-&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">	ticketNumberRegExp</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;</span><span style="--shiki-light:#EE0000;--shiki-dark:#56B6C2;">\\\\</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">d{1,5}&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">	// it needs to match the value for field type. Eg.: &#39;fix&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">	scopeOverrides</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">		fix</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> [</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">			{ </span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;merge&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> },</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">			{ </span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;style&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> },</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">			{ </span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;e2eTest&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> },</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">			{ </span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;unitTest&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> }</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">		]</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">	},</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">	// override the messages, defaults are as follows</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">	messages</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">		type</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;选择要提交的更改类型:&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">		scope</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;</span><span style="--shiki-light:#EE0000;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">表示此更改的范围(可选):&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">		// used if allowCustomScopes is true</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">		customScope</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;表示此更改的范围(自定义):&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">		subject</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;写一个简短的，命令式的时态描述变化:</span><span style="--shiki-light:#EE0000;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">		body</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;提供更改的较长描述(可选)。使用&quot;|&quot;换行:</span><span style="--shiki-light:#EE0000;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">		breaking</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;列出任何重大更改(可选):</span><span style="--shiki-light:#EE0000;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">		footer</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;列出此更改关闭的任何问题(可选). E.g.: #31, #34:</span><span style="--shiki-light:#EE0000;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">		confirmCommit</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;您确定要继续上面的提交吗?&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">	},</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">	allowCustomScopes</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">	allowBreakingChanges</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&#39;feat&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&#39;fix&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">],</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">	// skip any questions you want</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">	skipQuestions</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&#39;body&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">],</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">	// limit subject length</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">	subjectLimit</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#098658;--shiki-dark:#D19A66;"> 100</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// breaklineChar: &#39;|&#39;, // It is supported for fields body and footer.</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// footerPrefix : &#39;ISSUES CLOSED:&#39;</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// askForBreakingChangeFirst : true, // default is false</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br></div></div><h2 id="husky-不起作用解决方案" tabindex="-1">Husky 不起作用解决方案 <a class="header-anchor" href="#husky-不起作用解决方案" aria-label="Permalink to &quot;Husky 不起作用解决方案&quot;">​</a></h2><p>参考官网：<a href="https://typicode.github.io/husky/#/" target="_blank" rel="noreferrer">https://typicode.github.io/husky/#/</a> 按以下步骤进行设置：</p><p>删除 .git 目录下的 hooks 及 .husky</p><p>查看 git config 配置是否存在 core.hookspath=.husky</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> --list</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>删除配置及卸载 Huksy:</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> uninstall</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> husky</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> --unset</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> core.hookspath</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>再次安装 Husky:</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> husky</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> --save-dev</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">//</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> npm</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> set-script</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> prepare</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &quot;husky install&quot;</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">npx</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> husky-init</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>新增 Hooks：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">npx</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> husky</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> .husky/pre-commit</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &quot;npx lint-staged&quot;</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">npx</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> husky</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> .husky/pre-commit</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &quot;npx pretty-quick --staged&quot;</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">npx</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> husky</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> .husky/commit-msg</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;npx --no-install commitlint --edit&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="contributors" tabindex="-1">Contributors <a class="header-anchor" href="#contributors" aria-label="Permalink to &quot;Contributors&quot;">​</a></h2>`,149);function o(u,g,b,y,m,B){const a=p,i=e,n=l;return r(),h("div",null,[c,s(a,{readTime:"13",words:"3.4k"}),s(i),s(n)])}const q=t(d,[["render",o]]);export{F as __pageData,q as default};
