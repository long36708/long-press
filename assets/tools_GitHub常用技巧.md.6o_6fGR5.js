import{_ as t,a as r,b as l}from"./chunks/PageInfo.vue_vue_type_script_setup_true_lang.BCVHfIj7.js";import{_ as n,c as h,I as a,a7 as o,o as p}from"./chunks/framework.DGCt2JJv.js";import"./chunks/dayjs.min.DZyl58SH.js";const d="/long-press/assets/ff1a1897.CmPQwo3V.png",c="/long-press/assets/353e8b71.DDREf1Bf.png",C=JSON.parse('{"title":"Github常用技巧","description":"","frontmatter":{},"headers":[],"relativePath":"tools/GitHub常用技巧.md","filePath":"tools/GitHub常用技巧.md","lastUpdated":1719071461000}'),g={name:"tools/GitHub常用技巧.md"},b=o(`<h1 id="github常用技巧" tabindex="-1">Github常用技巧 <a class="header-anchor" href="#github常用技巧" aria-label="Permalink to &quot;Github常用技巧&quot;">​</a></h1><p><a href="https://docs.github.com/zh" target="_blank" rel="noreferrer">https://docs.github.com/zh</a></p><h2 id="github站点能访问-但代码不能推拉解决方案" tabindex="-1">github站点能访问，但代码不能推拉解决方案 <a class="header-anchor" href="#github站点能访问-但代码不能推拉解决方案" aria-label="Permalink to &quot;github站点能访问，但代码不能推拉解决方案&quot;">​</a></h2><p><a href="https://blog.csdn.net/zhaoyang3402/article/details/134181747?spm=1001.2014.3001.5502" target="_blank" rel="noreferrer">https://blog.csdn.net/zhaoyang3402/article/details/134181747?spm=1001.2014.3001.5502</a></p><h3 id="_1-l修改host" tabindex="-1">1.l修改host <a class="header-anchor" href="#_1-l修改host" aria-label="Permalink to &quot;1.l修改host&quot;">​</a></h3><p>访问链接：<a href="https://raw.hellogithub.com/hosts%EF%BC%88ps%EF%BC%9A%E8%BF%99%E9%93%BE%E6%8E%A5%E5%AE%9A%E6%97%B6%E6%9B%B4%E6%96%B0%EF%BC%89%EF%BC%8C%E8%8E%B7%E5%8F%96%E5%AF%B9%E5%BA%94%E7%9A%84host%E9%85%8D%E7%BD%AE%E3%80%82" target="_blank" rel="noreferrer">https://raw.hellogithub.com/hosts（ps：这链接定时更新），获取对应的host配置。</a></p><p>如果需要工具自动更新的话，点击链接：<a href="https://github.com/oldj/SwitchHosts" target="_blank" rel="noreferrer">https://github.com/oldj/SwitchHosts</a></p><h2 id="_2-设置代理" tabindex="-1">2.设置代理 <a class="header-anchor" href="#_2-设置代理" aria-label="Permalink to &quot;2.设置代理&quot;">​</a></h2><p>两种情况： 第一种情况自己有vpn，网页可以打开github。说明命令行在拉取/推送代码时并没有使用vpn进行代理。</p><p>第二种情况没有vpn，这时可以去某些网站上找一些代理ip+port。</p><p>解决办法：配置http代理Windows、Linux、Mac OS 中 git 命令相同： 配置socks5代理</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> --global</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> http.proxy</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> socks5</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> 127.0.0.1:7890</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> --global</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> https.proxy</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> socks5</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> 127.0.0.1:7890</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>配置http代理</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> --global</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> http.proxy</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> 127.0.0.1:7890</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> --global</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> https.proxy</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> 127.0.0.1:7890</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>注意： 命令中的主机号（127.0.0.1）是使用的代理的主机号(自己电脑有vpn那么本机可看做访问github的代理主机)， 即填入127.0.0.1即可，否则填入代理主机 ip(就是网上找的那个ip) 命令中的端口号（7890）为代理软件(代理软件不显示端口的话，就去Windows中的代理服务器设置中查看) 或代理主机的监听IP，可以从代理服务器配置中获得，否则填入网上找的那个端口port <img src="`+d+'" alt=""> socks5和http两种协议由使用的代理软件决定，不同软件对这两种协议的支持有差异，如果不确定可以都尝试一下 主机号和端口号可在代理的位置查看(自己有vpn的需要查看)。 <img src="'+c+`" alt=""></p><p>查看代理命令</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> --global</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> --get</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> http.proxy</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> --global</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> --get</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> https.proxy</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>取消代理命令</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> --global</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> --unset</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> http.proxy</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> config</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> --global</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> --unset</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> https.proxy</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="你所不知道的-github-快捷键及实用技巧" tabindex="-1">你所不知道的 GitHub 快捷键及实用技巧 <a class="header-anchor" href="#你所不知道的-github-快捷键及实用技巧" aria-label="Permalink to &quot;你所不知道的 GitHub 快捷键及实用技巧&quot;">​</a></h2><p><a href="https://blog.csdn.net/sl285720967/article/details/125692355" target="_blank" rel="noreferrer">https://blog.csdn.net/sl285720967/article/details/125692355</a></p><h2 id="像操作vscode一样操作github" tabindex="-1">像操作vscode一样操作github <a class="header-anchor" href="#像操作vscode一样操作github" aria-label="Permalink to &quot;像操作vscode一样操作github&quot;">​</a></h2><ul><li>方法1：快捷键 <code>.</code></li><li>方法2：将地址栏中的 <code>github.com</code> 替换为 <code>github1s.com</code>，然后回车</li><li>方法3：安装插件 <a href="https://www.octotree.io/" target="_blank" rel="noreferrer">Octotree</a></li><li>方法4：安装插件 [GitHub1s]</li></ul><h2 id="在线运行项目" tabindex="-1">在线运行项目 <a class="header-anchor" href="#在线运行项目" aria-label="Permalink to &quot;在线运行项目&quot;">​</a></h2><ul><li>方法1：将地址栏中的 <code>github.com</code> 替换为 <code>gitpod.io/#</code>，然后回车</li><li>方法2：安装插件 <a href="https://www.gitpod.io/" target="_blank" rel="noreferrer">Gitpod</a></li><li>方法3：安装插件 <a href="https://codesandbox.io/" target="_blank" rel="noreferrer">CodeSandbox</a></li><li>方法4：安装插件 <a href="https://replit.com/" target="_blank" rel="noreferrer">Repl.it</a></li><li>方法5：安装插件 <a href="https://glitch.com/" target="_blank" rel="noreferrer">Glitch</a></li><li>方法6：安装插件 <a href="https://codepen.io/" target="_blank" rel="noreferrer">CodePen</a></li><li>方法7：安装插件 <a href="https://jsfiddle.net/" target="_blank" rel="noreferrer">JSFiddle</a></li><li>方法8：安装插件 <a href="https://jsbin.com/" target="_blank" rel="noreferrer">JSBin</a></li><li>方法9：安装插件 <a href="https://stackblitz.com/" target="_blank" rel="noreferrer">StackBlitz</a></li><li>方法10：安装插件 <a href="https://runkit.com/" target="_blank" rel="noreferrer">RunKit</a></li><li>方法11：安装插件 <a href="https://observablehq.com/" target="_blank" rel="noreferrer">Observable</a></li><li>方法12：安装插件 <a href="https://glitch.com/" target="_blank" rel="noreferrer">Glitch</a></li></ul><h2 id="按快捷键-shift-打开快捷键列表" tabindex="-1">按快捷键 shift + ? 打开快捷键列表 <a class="header-anchor" href="#按快捷键-shift-打开快捷键列表" aria-label="Permalink to &quot;按快捷键 shift + ? 打开快捷键列表&quot;">​</a></h2><h2 id="使用-t键-搜索文件" tabindex="-1">使用 T键 搜索文件 <a class="header-anchor" href="#使用-t键-搜索文件" aria-label="Permalink to &quot;使用 T键 搜索文件&quot;">​</a></h2><h2 id="使用-l键-快速跳转到某一行" tabindex="-1">使用 L键 快速跳转到某一行 <a class="header-anchor" href="#使用-l键-快速跳转到某一行" aria-label="Permalink to &quot;使用 L键 快速跳转到某一行&quot;">​</a></h2><h2 id="文件页面-使用-b键-查看文件的历史变更" tabindex="-1">文件页面 使用 B键 查看文件的历史变更 <a class="header-anchor" href="#文件页面-使用-b键-查看文件的历史变更" aria-label="Permalink to &quot;文件页面 使用 B键 查看文件的历史变更&quot;">​</a></h2><h2 id="按-ctrl-k-打开命令面板" tabindex="-1">按 ctrl+k 打开命令面板 <a class="header-anchor" href="#按-ctrl-k-打开命令面板" aria-label="Permalink to &quot;按 ctrl+k 打开命令面板&quot;">​</a></h2><h2 id="将github中代码的某一行或者某一段代码分享给别人" tabindex="-1">将github中代码的某一行或者某一段代码分享给别人 <a class="header-anchor" href="#将github中代码的某一行或者某一段代码分享给别人" aria-label="Permalink to &quot;将github中代码的某一行或者某一段代码分享给别人&quot;">​</a></h2><ul><li>方法1：点击行号，然后复制链接</li><li>方法2：选中代码，右键，选择 <code>Copy permalink</code></li><li>方法3：安装插件 <a href="https://chrome.google.com/webstore/detail/copy-code/ohfjpkccecpjgfncjgganofhjffbejod" target="_blank" rel="noreferrer">Copy Code</a></li><li>批量复制代码：按住 <code>shift</code> 键，点击代码行号，然后右键，选择 <code>Copy permalink</code></li></ul><h2 id="使用-sourcegraph-查看代码-支持方法跳转" tabindex="-1">使用 sourcegraph 查看代码,支持方法跳转 <a class="header-anchor" href="#使用-sourcegraph-查看代码-支持方法跳转" aria-label="Permalink to &quot;使用 sourcegraph 查看代码,支持方法跳转&quot;">​</a></h2><h2 id="比如你想跳转到一个分支-看下它与主干的区别-就可以直接在你仓库的后面输入-compare-branch-name" tabindex="-1">比如你想跳转到一个分支，看下它与主干的区别，就可以直接在你仓库的后面输入/compare/branch-name <a class="header-anchor" href="#比如你想跳转到一个分支-看下它与主干的区别-就可以直接在你仓库的后面输入-compare-branch-name" aria-label="Permalink to &quot;比如你想跳转到一个分支，看下它与主干的区别，就可以直接在你仓库的后面输入/compare/branch-name&quot;">​</a></h2><h2 id="如何查看项目star增长曲线" tabindex="-1">如何查看项目star增长曲线 <a class="header-anchor" href="#如何查看项目star增长曲线" aria-label="Permalink to &quot;如何查看项目star增长曲线&quot;">​</a></h2><p>如果想看某个项目从发布到至今的一个增长曲线又如何看呢？</p><p>我们需要借助 GitHub Star History 这个站点辅助实现</p><p>[GitHub Star History]：<a href="https://star-history.com/" target="_blank" rel="noreferrer">https://star-history.com/</a></p><p>使用 # 拼接GitHub项目路径或者直接在star-history中粘贴github项目地址即可</p><h2 id="shields-io" tabindex="-1">shields.io <a class="header-anchor" href="#shields-io" aria-label="Permalink to &quot;shields.io&quot;">​</a></h2><p><a href="https://shields.io/" target="_blank" rel="noreferrer">https://shields.io/</a></p><h2 id="github-statistics-一个基于-react-的-github-数据统计工具" tabindex="-1">Github Statistics 一个基于 React 的 GitHub 数据统计工具 <a class="header-anchor" href="#github-statistics-一个基于-react-的-github-数据统计工具" aria-label="Permalink to &quot;Github Statistics 一个基于 React 的 GitHub 数据统计工具&quot;">​</a></h2><p><a href="https://zhuanlan.zhihu.com/p/99245947" target="_blank" rel="noreferrer">https://zhuanlan.zhihu.com/p/99245947</a></p><h2 id="git-clone时rpc-failed-curl-18-transfer-closed-with-outstanding-read-data-remaining" tabindex="-1">git clone时RPC failed; curl 18 transfer closed with outstanding read data remaining <a class="header-anchor" href="#git-clone时rpc-failed-curl-18-transfer-closed-with-outstanding-read-data-remaining" aria-label="Permalink to &quot;git clone时RPC failed; curl 18 transfer closed with outstanding read data remaining&quot;">​</a></h2><p>解决方法：命令行输入</p><p>git config --global http.lowSpeedLimit 0 git config --global http.lowSpeedTime 999999 如果依旧clone失败，则首先浅层clone，然后更新远程库到本地</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> clone</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> --depth=1</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> http://gitlab.xxx.cn/yyy/zzz.git</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> fetch</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> --unshallow</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>yarn config set network-timeout 300000</p><h2 id="github-readme-卡片美化" tabindex="-1">GitHub README 卡片美化 <a class="header-anchor" href="#github-readme-卡片美化" aria-label="Permalink to &quot;GitHub README 卡片美化&quot;">​</a></h2><p>卡片生成 anuraghazra/github-readme-stats <a href="https://github.com/anuraghazra/github-readme-stats" target="_blank" rel="noreferrer">https://github.com/anuraghazra/github-readme-stats</a></p><p>徽章生成 badges/shields <a href="https://github.com/badges/shields" target="_blank" rel="noreferrer">https://github.com/badges/shields</a></p><p>wakatime 徽章 WakaTime - Dashboards for developers <a href="https://wakatime.com/" target="_blank" rel="noreferrer">https://wakatime.com/</a></p><p>访问量徽章 antonkomarev/github-profile-views-counter <a href="https://github.com/antonkomarev/github-profile-views-counter" target="_blank" rel="noreferrer">https://github.com/antonkomarev/github-profile-views-counter</a></p><p>streak-stats DenverCoder1/github-readme-streak-stats <a href="https://github.com/denvercoder1/github-readme-streak-stats" target="_blank" rel="noreferrer">https://github.com/denvercoder1/github-readme-streak-stats</a></p><p>奖杯 ryo-ma/github-profile-trophy <a href="https://github.com/ryo-ma/github-profile-trophy" target="_blank" rel="noreferrer">https://github.com/ryo-ma/github-profile-trophy</a></p><p>模板 <a href="https://githubprofile.com/templates" target="_blank" rel="noreferrer">https://githubprofile.com/templates</a></p><p>Gitmoji <a href="https://gitmoji.dev/" target="_blank" rel="noreferrer">https://gitmoji.dev/</a><a href="https://www.npmjs.com/package/devmojix" target="_blank" rel="noreferrer">https://www.npmjs.com/package/devmojix</a></p><h3 id="substats" tabindex="-1">substats <a class="header-anchor" href="#substats" aria-label="Permalink to &quot;substats&quot;">​</a></h3><p><a href="https://substats.spencerwoo.com/" target="_blank" rel="noreferrer">https://substats.spencerwoo.com/</a></p><p><a href="https://substats.swo.moe/" target="_blank" rel="noreferrer">https://substats.swo.moe/</a></p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> -G</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;https://img.shields.io/badge/dynamic/json&#39;</span><span style="--shiki-light:#EE0000;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">--data-urlencode </span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&#39;url=https://api.bilibili.com/x/relation/stat?vmid=248956095&#39;</span><span style="--shiki-light:#EE0000;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">--data-urlencode </span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&#39;query=$.data.follower&#39;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p><a href="https://api.bilibili.com/x/web-interface/card?mid=248956095" target="_blank" rel="noreferrer">https://api.bilibili.com/x/web-interface/card?mid=248956095</a></p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">curl</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> -X</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> GET</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;">  -H</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &quot;X-Requested-With:XMLHttpRequest&quot;</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> -H</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &quot;X-App-Id:com.coolapk.market&quot;</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> -H</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &quot;X-App-Token:v2JDJ5JDEwJE1UY3hPVEEyTVRRek53LzE2NDg3YXVEL1J0NzBobUlkQ2xCWDdVeFI0VkM3WFFZTDBJUWJp&quot;</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;">  -H</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &quot;X-App-Device:AyOzEjLG9VMx8FMx00QHBFI7ATMNN0RQByOPBFUPByOPBFUPByOgsDI7AyOzcjMBlmZYtWLshncvNmM3ZFdwMkMZFWMXlHWGRDTalTLoVFR&quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &quot;https://api.coolapk.com/v6/user/profile?uid=922815&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><a href="https://curl.bravexist.cn/javascript/" target="_blank" rel="noreferrer">https://curl.bravexist.cn/javascript/</a></p><h3 id="readme-typing-svg" tabindex="-1">readme-typing-svg <a class="header-anchor" href="#readme-typing-svg" aria-label="Permalink to &quot;readme-typing-svg&quot;">​</a></h3><p><a href="https://readme-typing-svg.demolab.com/demo/" target="_blank" rel="noreferrer">https://readme-typing-svg.demolab.com/demo/</a></p><h2 id="https-github-com-long36708-long36708-blob-main-resources-img-grid-snake-svg-请问这个的文件要放到github的哪个目录下" tabindex="-1"><a href="https://github.com/long36708/long36708/blob/main/resources/img/grid-snake.svg" target="_blank" rel="noreferrer">https://github.com/long36708/long36708/blob/main/resources/img/grid-snake.svg</a> 请问这个的文件要放到github的哪个目录下 <a class="header-anchor" href="#https-github-com-long36708-long36708-blob-main-resources-img-grid-snake-svg-请问这个的文件要放到github的哪个目录下" aria-label="Permalink to &quot;https://github.com/long36708/long36708/blob/main/resources/img/grid-snake.svg 请问这个的文件要放到github的哪个目录下&quot;">​</a></h2><p>该链接指向GitHub上一个SVG图像文件。根据链接的路径/long36708/blob/main/resources/img/grid-snake.svg，这个文件已经被放置在了名为long36708的仓库中的一个特定目录结构里。这里的路径说明了文件的组织方式：</p><p>main 表示该仓库的默认分支（通常是主分支）。 resources 是一个顶级目录，用来存放资源文件。 img 是位于resources目录下的子目录，专门用来存放图像文件。 所以，这个grid-snake.svg文件已经被正确地放在了resources/img目录下。在GitHub上，你可以直接通过这个URL访问到这个图像文件，也可以在对应的仓库页面中浏览和管理这个文件。 如果想要在Markdown文件或者其他代码中引用这个图像，可以使用相对路径或者绝对URL（就像你提供的那样）来指向它。</p><p>对于这个文件，你可以将它放在你的 GitHub 仓库的 &quot;resources&quot; 目录下，通常也可以选择 &quot;assets&quot;、&quot;images&quot; 或者其他类似的名称。 如果你还没有这样的目录，你可以按照以下步骤操作：</p><ol><li><p>在你的 GitHub 仓库中创建一个新的目录，可以命名为 &quot;resources&quot;、&quot;assets&quot;、&quot;images&quot; 或者其他你喜欢的名称。</p></li><li><p>将你的图片文件 <code>grid-snake.svg</code> 上传到这个新创建的目录中。</p></li><li><p>确保提交并推送这些更改到 GitHub 仓库。</p></li><li><p>现在，你就可以通过链接 <code>https://github.com/你的用户名/你的仓库名/raw/分支名/目录名/文件名</code> 来访问你的图片文件了。</p></li></ol><p>例如，假设你的用户名是 &quot;long36708&quot;，你的仓库名是 &quot;long36708&quot;，分支名是 &quot;main&quot;，你创建的目录名是 &quot;resources&quot;，那么你的图片文件的原始链接将是：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>https://github.com/long36708/long36708/raw/main/resources/img/grid-snake.svg</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这样，你就可以在 README 文件或其他地方引用这个链接，显示你的图片文件了。</p><h2 id="将raw改为blob可以吗" tabindex="-1">将raw改为blob可以吗？ <a class="header-anchor" href="#将raw改为blob可以吗" aria-label="Permalink to &quot;将raw改为blob可以吗？&quot;">​</a></h2><p>是的，你可以使用 &quot;blob&quot; 而不是 &quot;raw&quot; 来访问 GitHub 上的文件。 &quot;blob&quot; 用于显示 GitHub 上的某个文件，而 &quot;raw&quot; 用于直接访问文件的原始内容。 因此，你可以使用 &quot;blob&quot; 来访问文件并在浏览器中查看其内容。</p><p>你可以将链接修改为：</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>https://github.com/long36708/long36708/blob/main/resources/img/grid-snake.svg</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这样就可以访问到你的图片文件，并在浏览器中查看其内容了。</p><h2 id="nojekyll是什么文件" tabindex="-1">.nojekyll是什么文件 <a class="header-anchor" href="#nojekyll是什么文件" aria-label="Permalink to &quot;.nojekyll是什么文件&quot;">​</a></h2><p><code>.nojekyll</code> 文件是一个用于GitHub Pages的特殊文件。当你在GitHub仓库的根目录中包含这个文件时，它会告诉GitHub Pages不要使用Jekyll来处理你的站点。 Jekyll是一个静态站点生成器，GitHub Pages默认使用它来将Markdown和其他文本格式的文件转换成静态HTML页面。</p><p>如果你的仓库包含的已经是静态HTML文件，或者你使用了其他构建流程（例如Gulp、Webpack或VuePress等），并且不想让GitHub Pages自动使用Jekyll处理这些文件，那么添加一个空的 <code>.nojekyll</code> 文件就可以避免这种情况。 这个文件不需要任何内容，只需存在即可生效。这样，GitHub Pages就会直接将你的仓库内容作为静态网站发布，不做任何额外的Jekyll处理步骤。</p><h2 id="contributors" tabindex="-1">Contributors <a class="header-anchor" href="#contributors" aria-label="Permalink to &quot;Contributors&quot;">​</a></h2>`,83);function k(u,m,f,y,v,q){const s=t,e=r,i=l;return p(),h("div",null,[b,a(s,{readTime:"7",words:"2.1k"}),a(e),a(i)])}const E=n(g,[["render",k]]);export{C as __pageData,E as default};
