import{_ as e,a as p,b as l}from"./chunks/PageInfo.vue_vue_type_script_setup_true_lang.BCVHfIj7.js";import{_ as t,c as r,I as s,a7 as h,o as k}from"./chunks/framework.DGCt2JJv.js";import"./chunks/dayjs.min.DZyl58SH.js";const C=JSON.parse('{"title":"常用node库","description":"","frontmatter":{},"headers":[],"relativePath":"tools/常用node库.md","filePath":"tools/常用node库.md","lastUpdated":1714570785000}'),d={name:"tools/常用node库.md"},o=h(`<h1 id="常用node库" tabindex="-1">常用node库 <a class="header-anchor" href="#常用node库" aria-label="Permalink to &quot;常用node库&quot;">​</a></h1><h2 id="npm-run-all-脚本运行工具" tabindex="-1">npm-run-all（脚本运行工具） <a class="header-anchor" href="#npm-run-all-脚本运行工具" aria-label="Permalink to &quot;npm-run-all（脚本运行工具）&quot;">​</a></h2><p>这个工具是为了解决官方的 npm run 命令无法同时运行多个脚本的问题，它可以把诸如 npm run clean &amp;&amp; npm run build:css &amp;&amp; npm run build:js &amp;&amp; npm run build:html 的一长串的命令通过 glob 语法简化成 npm-run-all clean build:* 这样精致小巧的模样。 再者大家也知道 shell 的 &amp; 语法实际上是不支持 cmd 的，为了跨平台也最好使用这样的第三方库来提供支持。 preact 中就是用来对数量繁多的子模块进行并行构建和顺序测试。</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> npm-run-all</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> --save-dev</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>这个包提供三个命令，分别是 npm-run-all run-s run-p，其中后两个都是 npm-run-all 带参数的简写，分别对应串行和并行。</p><p>顺序执行：npm-run-all clean lint build 并行执行：npm-run-all --parallel lint build 也可以混合执行，如：npm-run-all a b --parallel c d --sequential e f --parallel g h i</p><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>    --parallel: 并行运行多个命令，例如：npm-run-all --parallel lint build</span></span>
<span class="line"><span>    --serial: 多个命令按排列顺序执行，例如：npm-run-all --serial clean lint build:**</span></span>
<span class="line"><span>    --continue-on-error: 是否忽略错误，添加此参数 npm-run-all 会自动退出出错的命令，继续运行正常的</span></span>
<span class="line"><span>    --race: 添加此参数之后，只要有一个命令运行出错，那么 npm-run-all 就会结束掉全部的命令</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    run-s：为 npm-run-all --serial的缩写；</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    run-p：为 npm-run-all --parallel的缩写</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="cross-env-配置环境变量-解决不同系统之前的命令兼容问题" tabindex="-1">cross-env（配置环境变量-解决不同系统之前的命令兼容问题） <a class="header-anchor" href="#cross-env-配置环境变量-解决不同系统之前的命令兼容问题" aria-label="Permalink to &quot;cross-env（配置环境变量-解决不同系统之前的命令兼容问题）&quot;">​</a></h2><p>cross-env 是一个 Node.js 模块，用于在不同的环境中管理运行时变量。 例如，通过 cross-env，你可以在生产环境中设置不同的环境变量，而在开发环境中设置不同的环境变量。 使用 cross-env，你可以在代码中方便地设置环境变量，而不需要手动在命令行中设置它们。</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#E06C75;">  &quot;scripts&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#E06C75;">    &quot;dev&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&quot;cross-env NODE_ENV=development webpack --progress --colors&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#E06C75;">    &quot;build&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&quot;cross-env NODE_ENV=production webpack&quot;</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="将process-env-node-env全局化" tabindex="-1">将process.env.NODE_ENV全局化 <a class="header-anchor" href="#将process-env-node-env全局化" aria-label="Permalink to &quot;将process.env.NODE_ENV全局化&quot;">​</a></h3><p>如果在业务代码中，需要根据开发环境，动态改变数据请求地址，会更加自动化，所以不仅仅在打包配置中我们需要使用 process.env.NODE_ENV，在其他模块中，仍要使用它，则需要将其全局化。</p><p>在webpack.config.js中，全局化process.env.NODE_ENV</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#0070C1;--shiki-dark:#E5C07B;"> webpack</span><span style="--shiki-light:#000000;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;"> require</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&#39;webpack&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#267F99;--shiki-dark:#E5C07B;">module</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#267F99;--shiki-dark:#E5C07B;">exports</span><span style="--shiki-light:#000000;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">	configureWebpack</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">		plugins</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> [</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#C678DD;">			new</span><span style="--shiki-light:#001080;--shiki-dark:#E5C07B;"> webpack</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">DefinePlugin</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">({</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">				&quot;process.argv&quot;</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0070C1;--shiki-dark:#E5C07B;"> JSON</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">stringify</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#001080;--shiki-dark:#E5C07B;">process</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">argv</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">			})</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">		]</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">	}</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="打包时内存溢出解决方案" tabindex="-1">打包时内存溢出解决方案 <a class="header-anchor" href="#打包时内存溢出解决方案" aria-label="Permalink to &quot;打包时内存溢出解决方案&quot;">​</a></h3><p>在依赖 package.json 中修改 build 为：</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#E06C75;">  &quot;dev&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&quot;node build/dev-server.js&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#E06C75;">  &quot;build:prod&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&quot;cross-env NODE_ENV=production node --max_old_space_size=6144 build/build.js&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#E06C75;">  &quot;build:sit&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&quot;cross-env NODE_ENV=sit node build/build.js&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#E06C75;">  &quot;build:sit-preview&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&quot;cross-env NODE_ENV=sit npm_config_preview=true  npm_config_report=true node build/build.js&quot;</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="dotenv-配置文件" tabindex="-1">dotenv（配置文件） <a class="header-anchor" href="#dotenv-配置文件" aria-label="Permalink to &quot;dotenv（配置文件）&quot;">​</a></h2><p>dotenv是一个零依赖模块，它将环境变量从 .env 文件加载到 process.env 中。 dotenv提供许多的方法，最常用的是dotenv.config()。 dotenv.config()读取一个.env文件，解析其内容，将.env文件中声明的环境变量合并进process.env， 然后返回一个对象result。result.parsed是解析出的内容，result.error是在解析失败的时候返回的一个标识。 通常我们只需要进行dotenv.config() 操作，不需要关心result。</p><p>如何使用：</p><p>创建.env 文件</p><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>    S3_BUCKET=&quot;YOURS3BUCKET&quot;</span></span>
<span class="line"><span>    SECRET_KEY=&quot;YOURSECRETKEYGOESHERE&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>使用</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#AF00DB;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> *</span><span style="--shiki-light:#AF00DB;--shiki-dark:#C678DD;"> as</span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;"> dotenv</span><span style="--shiki-light:#AF00DB;--shiki-dark:#C678DD;"> from</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &#39;dotenv&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E5C07B;">dotenv</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">config</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#001080;--shiki-dark:#E5C07B;">process</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">env</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 解析</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#0070C1;--shiki-dark:#E5C07B;"> env</span><span style="--shiki-light:#000000;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#001080;--shiki-dark:#E5C07B;"> dotenv</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">parse</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E5C07B;">	fs</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">readFileSync</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#001080;--shiki-dark:#E5C07B;">path</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">resolve</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#001080;--shiki-dark:#E5C07B;">process</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">cwd</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">(), </span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&quot;env.product&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><p>在根目录新增五个文件(根据自身情况增减) .env 和 .env.dev和 .env.pre和 .env.prod和 .env.sit和 .env.uat，分别为默认配置、本地开发配置、灰度配置、生产配置、测试配置1、测试配置2</p><h3 id="您可以使用-require-r-命令行选项来预加载-dotenv。通过这样做-您不需要在应用程序代码中要求和加载-dotenv。" tabindex="-1">您可以使用 --require （ -r ） 命令行选项来预加载 dotenv。通过这样做，您不需要在应用程序代码中要求和加载 dotenv。 <a class="header-anchor" href="#您可以使用-require-r-命令行选项来预加载-dotenv。通过这样做-您不需要在应用程序代码中要求和加载-dotenv。" aria-label="Permalink to &quot;您可以使用 --require （ -r ） 命令行选项来预加载 dotenv。通过这样做，您不需要在应用程序代码中要求和加载 dotenv。&quot;">​</a></h3><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">node</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> -r</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> dotenv/config</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> your_script.js</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>以下配置选项支持作为以下格式 <code>dotenv_config_&lt;option&gt;=value </code>的命令行参数</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;"> node</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> -r</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> dotenv/config</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> your_script.js</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> dotenv_config_path=/custom/path/to/.env</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> dotenv_config_debug=</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;">true</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="dotenv-cli-实现使用环境变量步骤" tabindex="-1">dotenv-cli 实现使用环境变量步骤 <a class="header-anchor" href="#dotenv-cli-实现使用环境变量步骤" aria-label="Permalink to &quot;dotenv-cli 实现使用环境变量步骤&quot;">​</a></h2><p><a href="https://blog.csdn.net/weixin_44058725/article/details/134051772?spm=1001.2014.3001.5502" target="_blank" rel="noreferrer">https://blog.csdn.net/weixin_44058725/article/details/134051772?spm=1001.2014.3001.5502</a></p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> dotenv-cli</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> --save-dev</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>新建 .env.xxx的环境文件 比如 .env.dev 开发环境的配置文件。 需要注意的是 只能以REACT_APP_ xxx命名才行，我试了一下，其他名称不起作用！</p><p>还需要注意的是 以key=value的形式。末尾后不可以加分号（加上后 值会在前后加上一个 / ）。</p><div class="tip custom-block"><p class="custom-block-title">提示</p><p>dotenv: 运行dotenv库的命令。</p><p>-e: 是dotenv的选项之一，表示使用一个特定的环境变量文件。</p><p>.env.dev是指定的环境变量文件名，这个命令会加载.env.dev文件中定义的环境变量。</p><p>node scripts/start.js ：运行 start.js 。</p><p><a href="https://npmmirror.com/package/dotenv-cli" target="_blank" rel="noreferrer">https://npmmirror.com/package/dotenv-cli</a></p></div><h2 id="dotenv-expand-扩展计算机上已经存在的环境变量" tabindex="-1">dotenv-expand 扩展计算机上已经存在的环境变量 <a class="header-anchor" href="#dotenv-expand-扩展计算机上已经存在的环境变量" aria-label="Permalink to &quot;dotenv-expand 扩展计算机上已经存在的环境变量&quot;">​</a></h2><p>如果您发现自己需要扩展计算机上已经存在的环境变量，那么 dotenv-expand 就是您的工具。</p><h2 id="minimist-命令行解析" tabindex="-1">minimist（命令行解析） <a class="header-anchor" href="#minimist-命令行解析" aria-label="Permalink to &quot;minimist（命令行解析）&quot;">​</a></h2><p>node.js的命令行参数解析工具有很多，比如：argparse、optimist、yars、commander。 optimist和yargs内部使用的解析引擎正是minimist，如果你喜欢轻量级的技术，那么minimist足够简单好用，代码量也很少（只有几百行），非常适合研读。</p><p>简单示例：</p><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">node</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> minimist.js</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> lushuixi</span><span style="--shiki-light:#098658;--shiki-dark:#D19A66;"> 16</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> --template</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> vue</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> --name</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> --age=16</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> -f</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> --price</span><span style="--shiki-light:#098658;--shiki-dark:#D19A66;"> 2.5120</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>更多参数示例： 参数--sex如果指定了（不管后面有没有值），会解析为true。 而参数--sanhaosheng未指定，被解析为了false。</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">    node</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> index.js</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> --beep=boop</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> -t</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> -z</span><span style="--shiki-light:#098658;--shiki-dark:#D19A66;"> 12</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> -n5</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> foo</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> bar</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>Node.js 程序启动后可以直接从process.argv中读取到参数列表：</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E5C07B;"> console</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#001080;--shiki-dark:#E5C07B;">process</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">argv</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// [&#39;/bin/node&#39;, &#39;/tmp/index.js&#39;, &#39;--beep=boop&#39;, &#39;-t&#39;, &#39;-z&#39;, &#39;12&#39;, &#39;-n5&#39;, &#39;foo&#39;, &#39;bar&#39;]</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>从上述代码中可以看到，process.argv 变量是一个数组，数组前两项分别是 node 程序位置和js脚本位置，数组中随后的元素都是我们启动Node.js后的参数，这些参数以空格分隔成数组。</p><p>虽然从 process.argv 中可以得到启动参数列表，但是我们仍需要对参数进行进一步解析处理才行</p><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#0070C1;--shiki-dark:#E5C07B;"> argv</span><span style="--shiki-light:#000000;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;"> require</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&#39;minimist&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">)(</span><span style="--shiki-light:#001080;--shiki-dark:#E5C07B;">process</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#001080;--shiki-dark:#E5C07B;">argv</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">slice</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#098658;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">));</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">dir</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">argv</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// { _: [ &#39;foo&#39;, &#39;bar&#39; ], beep: &#39;boop&#39;, t: true, z: 12, n: 5 }</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>经过 minimist 解析的process.argv是一个对象，例如，我们可以直接从访问 argv.beep 得到 --beep=boop 参数的值。</p><h2 id="listr2" tabindex="-1">listr2 <a class="header-anchor" href="#listr2" aria-label="Permalink to &quot;listr2&quot;">​</a></h2><p>listr2 是一个易于使用的 Node.js 包，可以用来创建生动的、可以交互的 CLI 界面、任务列表。类似的库还有consola。 我们可以利用这个库实现自己的 CLI 、管理任务、优化控制台显示等。</p><h2 id="nodemon" tabindex="-1">nodemon <a class="header-anchor" href="#nodemon" aria-label="Permalink to &quot;nodemon&quot;">​</a></h2><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>&quot;cross-env&quot;: &quot;^7.0.3&quot;,</span></span>
<span class="line"><span>&quot;nodemon&quot;: &quot;^3.0.1&quot;,</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>packages/dev-server/nodemon.json</p><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#E06C75;">  &quot;watch&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: [</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">    &quot;src&quot;</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">  ],</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#E06C75;">  &quot;ext&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&quot;.ts&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#E06C75;">  &quot;exec&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&quot;ts-node -r tsconfig-paths/register ./src/main.ts&quot;</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">    &quot;dev&quot;</span><span style="--shiki-light:#795E26;--shiki-dark:#56B6C2;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &quot;cross-env PORT=8681 nodemon&quot;,</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="pm2" tabindex="-1">pm2 <a class="header-anchor" href="#pm2" aria-label="Permalink to &quot;pm2&quot;">​</a></h2><p>packages/dev-server/pm2.json</p><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">	&quot;apps&quot;</span><span style="--shiki-light:#795E26;--shiki-dark:#56B6C2;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> [</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">		{</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">			&quot;name&quot;</span><span style="--shiki-light:#795E26;--shiki-dark:#56B6C2;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &quot;my-app&quot;,</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">			&quot;script&quot;</span><span style="--shiki-light:#795E26;--shiki-dark:#56B6C2;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &quot;npm&quot;,</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">			&quot;args&quot;</span><span style="--shiki-light:#795E26;--shiki-dark:#56B6C2;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &quot;run dev&quot;,</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">			&quot;log&quot;</span><span style="--shiki-light:#795E26;--shiki-dark:#56B6C2;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &quot;logs/test.log&quot;,</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">			&quot;time&quot;</span><span style="--shiki-light:#795E26;--shiki-dark:#56B6C2;">:</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">,</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">			&quot;env&quot;</span><span style="--shiki-light:#795E26;--shiki-dark:#56B6C2;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">				&quot;NODE_ENV&quot;</span><span style="--shiki-light:#795E26;--shiki-dark:#56B6C2;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &quot;production&quot;</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">			}</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">		}</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">	]</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">    &quot;prd&quot;</span><span style="--shiki-light:#795E26;--shiki-dark:#56B6C2;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> &quot;pm2 start pm2.json --only my-app&quot;,</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="pm-keeper" tabindex="-1">pm-keeper <a class="header-anchor" href="#pm-keeper" aria-label="Permalink to &quot;pm-keeper&quot;">​</a></h2><p>A simple way to force package-manager in your project.</p><p>you can set a options in your package.json, link this:</p><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>{</span></span>
<span class="line"><span>  &quot;scripts&quot;: {</span></span>
<span class="line"><span>    &quot;preinstall&quot;: &quot;npx pm-keeper&quot;</span></span>
<span class="line"><span>  },</span></span>
<span class="line"><span>  &quot;pmKeeper&quot;: {</span></span>
<span class="line"><span>    &quot;name&quot;: &quot;npm&quot;,</span></span>
<span class="line"><span>    &quot;version&quot;: &quot;6.14.1&quot; // optional</span></span>
<span class="line"><span>  }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h2 id="np" tabindex="-1">np <a class="header-anchor" href="#np" aria-label="Permalink to &quot;np&quot;">​</a></h2><div class="language-bash vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">npm</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#0000FF;--shiki-dark:#D19A66;"> --global</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;"> np</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>$ np --help</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  Usage</span></span>
<span class="line"><span>    $ np &lt;version&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    Version can be:</span></span>
<span class="line"><span>      patch | minor | major | prepatch | preminor | premajor | prerelease | 1.2.3</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  Options</span></span>
<span class="line"><span>    --any-branch            Allow publishing from any branch</span></span>
<span class="line"><span>    --branch                Name of the release branch (default: main | master)</span></span>
<span class="line"><span>    --no-cleanup            Skips cleanup of node_modules</span></span>
<span class="line"><span>    --no-tests              Skips tests</span></span>
<span class="line"><span>    --yolo                  Skips cleanup and testing</span></span>
<span class="line"><span>    --no-publish            Skips publishing</span></span>
<span class="line"><span>    --preview               Show tasks without actually executing them</span></span>
<span class="line"><span>    --tag                   Publish under a given dist-tag</span></span>
<span class="line"><span>    --contents              Subdirectory to publish</span></span>
<span class="line"><span>    --no-release-draft      Skips opening a GitHub release draft</span></span>
<span class="line"><span>    --release-draft-only    Only opens a GitHub release draft for the latest published version</span></span>
<span class="line"><span>    --test-script           Name of npm run script to run tests before publishing (default: test)</span></span>
<span class="line"><span>    --no-2fa                Don&#39;t enable 2FA on new packages (not recommended)</span></span>
<span class="line"><span>    --message               Version bump commit message, &#39;%s&#39; will be replaced with version (default: &#39;%s&#39; with npm and &#39;v%s&#39; with yarn)</span></span>
<span class="line"><span>    --package-manager       Use a specific package manager (default: &#39;packageManager&#39; field in package.json)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  Examples</span></span>
<span class="line"><span>    $ np</span></span>
<span class="line"><span>    $ np patch</span></span>
<span class="line"><span>    $ np 1.0.2</span></span>
<span class="line"><span>    $ np 1.0.2-beta.3 --tag=beta</span></span>
<span class="line"><span>    $ np 1.0.2-beta.3 --tag=beta --contents=dist</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br></div></div><h1 id="工具包" tabindex="-1">工具包 <a class="header-anchor" href="#工具包" aria-label="Permalink to &quot;工具包&quot;">​</a></h1><p><a href="https://github.com/Lands-1203/cli#%E5%B7%A5%E5%85%B7%E5%8C%85" target="_blank" rel="noreferrer"></a></p><table tabindex="0"><thead><tr><th>包名</th><th>作用</th></tr></thead><tbody><tr><td><a href="https://github.com/tj/commander.js/tree/master" target="_blank" rel="noreferrer">commander</a></td><td>如果我们把 bin 下面的命令 huize-cli 称作一级命令，该命令是创建给系统识别的，那么<a href="https://github.com/tj/commander.js/tree/master" target="_blank" rel="noreferrer">commander</a>工具包会创建对应的子命令和参数，使用该工具包就可以得到用户的子命令（create）、参数等。以及可以创建该命令的描述：例如<code>huize-cli help</code> 、<code>huize-cli create --help</code> 。具体使用方式，见<a href="https://github.com/tj/commander.js/tree/master" target="_blank" rel="noreferrer">官方文档</a></td></tr><tr><td><a href="https://github.com/SBoudrias/Inquirer.js" target="_blank" rel="noreferrer">@inquirer/prompts</a></td><td>它是一个用于在命令行端与用户交互的工具包，在使用<a href="https://github.com/tj/commander.js/tree/master" target="_blank" rel="noreferrer">commander</a>得到用户命令和参数后，我们接下来就需要对用户进行一些提问，比如项目名称是什么、版本等信息。该工具包支持输入、选择、确认等基本交互</td></tr><tr><td><a href="https://github.com/isaacs/node-glob" target="_blank" rel="noreferrer">glob</a></td><td>查文件的，在该项目中主要是用于查询当前命令行路径下的所有文件名称，避免冲突。</td></tr><tr><td><a href="https://github.com/sindresorhus/execa#readme" target="_blank" rel="noreferrer">execa</a></td><td>这是一个用于创建 cmd 执行命令的工具。在该项目中主要担任执行 git 克隆和<code>pnpm i</code>包下载。</td></tr><tr><td>path</td><td>拼接系统中的绝对路径，由于 windows 和 ios 的路径规则不一样，它就能很好的解决这个问题。</td></tr><tr><td><a href="https://github.com/jprichardson/node-fs-extra" target="_blank" rel="noreferrer">fs-extra</a></td><td>读写文件。在该项目中，主要用于读取 clone 项目的 package.json，修改其 name 属性等。</td></tr></tbody></table><h2 id="mkdirp" tabindex="-1">mkdirp <a class="header-anchor" href="#mkdirp" aria-label="Permalink to &quot;mkdirp&quot;">​</a></h2><p><a href="https://github.com/isaacs/node-mkdirp.git" target="_blank" rel="noreferrer">https://github.com/isaacs/node-mkdirp.git</a></p><h2 id="onchange" tabindex="-1">onchange <a class="header-anchor" href="#onchange" aria-label="Permalink to &quot;onchange&quot;">​</a></h2><p>Use glob patterns to watch file sets and run a command when anything is added, changed or deleted.</p><p>使用glob模式监视文件集，并在添加、更改或删除任何内容时运行命令 <a href="https://github.com/Qard/onchange.git" target="_blank" rel="noreferrer">https://github.com/Qard/onchange.git</a></p><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>&quot;scripts&quot;: {</span></span>
<span class="line"><span>		&quot;watch&quot;: &quot;onchange -i &#39;babel-plugins/**/*.ts&#39; &#39;utils/**/*.ts&#39; -- pnpm compile&quot;,</span></span>
<span class="line"><span>		&quot;build:cjs&quot;: &quot;tsc&quot;,</span></span>
<span class="line"><span>		&quot;build:es&quot;: &quot;tsc -m esNext --outDir dist/esm&quot;,</span></span>
<span class="line"><span>		&quot;build:clear&quot;: &quot;rm -rf dist&quot;,</span></span>
<span class="line"><span>		&quot;compile&quot;: &quot;pnpm build:cjs &amp;&amp; pnpm build:es&quot;</span></span>
<span class="line"><span>	},</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="log-symbols" tabindex="-1">log-symbols <a class="header-anchor" href="#log-symbols" aria-label="Permalink to &quot;log-symbols&quot;">​</a></h2><p>日志彩色符号，用来显示√ 或 × 等的图标</p><h2 id="update-notifier检查库的更新" tabindex="-1">update-notifier检查库的更新 <a class="header-anchor" href="#update-notifier检查库的更新" aria-label="Permalink to &quot;update-notifier检查库的更新&quot;">​</a></h2><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">    // 引用 update-notifier 库，用于检查更新</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#0070C1;--shiki-dark:#E5C07B;"> updateNotifier</span><span style="--shiki-light:#000000;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;"> require</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&#39;update-notifier&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 引用 chalk 库，用于控制台字符样式</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#0070C1;--shiki-dark:#E5C07B;"> chalk</span><span style="--shiki-light:#000000;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;"> require</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&#39;chalk&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 引入 package.json 文件，用于 update-notifier 库读取相关信息</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#0070C1;--shiki-dark:#E5C07B;"> pkg</span><span style="--shiki-light:#000000;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;"> require</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&#39;../package.json&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// updateNotifier 是 update-notifier 的方法，其他方法可到 npmjs 查看</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#0070C1;--shiki-dark:#E5C07B;"> notifier</span><span style="--shiki-light:#000000;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;"> updateNotifier</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">({</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">	// 从 package.json 获取 name 和 version 进行查询</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">	pkg</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">	// 设定检查更新周期，默认为 1000 * 60 * 60 * 24（1 天）</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">	// 这里设定为 1000 毫秒（1秒）</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">	updateCheckInterval</span><span style="--shiki-light:#001080;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#098658;--shiki-dark:#D19A66;"> 1000</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;"> updateChk</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">	// 当检测到版本时，notifier.update 会返回 Object</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">	// 此时可以用 notifier.update.latest 获取最新版本号</span></span>
<span class="line"><span style="--shiki-light:#AF00DB;--shiki-dark:#C678DD;">	if</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#001080;--shiki-dark:#E5C07B;">notifier</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">update</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E5C07B;">		console</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">\`New version available: </span><span style="--shiki-light:#0000FF;--shiki-dark:#C678DD;">\${</span><span style="--shiki-light:#001080;--shiki-dark:#E5C07B;">chalk</span><span style="--shiki-light:#000000FF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">cyan</span><span style="--shiki-light:#000000FF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#001080;--shiki-dark:#E5C07B;">notifier</span><span style="--shiki-light:#000000FF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#001080;--shiki-dark:#E5C07B;">update</span><span style="--shiki-light:#000000FF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;">latest</span><span style="--shiki-light:#000000FF;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#0000FF;--shiki-dark:#C678DD;">}</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">, it&#39;s recommended that you update before using.\`</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E5C07B;">		notifier</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">notify</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">	} </span><span style="--shiki-light:#AF00DB;--shiki-dark:#C678DD;">else</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#001080;--shiki-dark:#E5C07B;">		console</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#795E26;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&#39;No new version is available.&#39;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">	}</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// 将上面的 updateChk() 方法导出</span></span>
<span class="line"><span style="--shiki-light:#267F99;--shiki-dark:#E5C07B;">module</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#267F99;--shiki-dark:#E5C07B;">exports</span><span style="--shiki-light:#000000;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#001080;--shiki-dark:#E06C75;"> updateChk</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><h2 id="gh-pages" tabindex="-1">gh-pages <a class="header-anchor" href="#gh-pages" aria-label="Permalink to &quot;gh-pages&quot;">​</a></h2><div class="language-text vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span>   &quot;gh-pages&quot;: &quot;^3.0.0&quot;,</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes light-plus one-dark-pro vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#E06C75;">  &quot;repository&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#E06C75;">    &quot;type&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&quot;git&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#E06C75;">    &quot;url&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&quot;https://github.com/xxx&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#E06C75;">    &quot;branch&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&quot;master&quot;</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">  },</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#E06C75;">  &quot;gitHooks&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#E06C75;">    &quot;pre-commit&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">&quot;lint-staged&quot;</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">  },</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#E06C75;">  &quot;lint-staged&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#E06C75;">    &quot;*.{js,jsx,less,md,json}&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: [</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">      &quot;prettier --write&quot;</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">    ],</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#E06C75;">    &quot;*.ts?(x)&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">: [</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#98C379;">      &quot;prettier --parser=typescript --write&quot;</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">    ]</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="contributors" tabindex="-1">Contributors <a class="header-anchor" href="#contributors" aria-label="Permalink to &quot;Contributors&quot;">​</a></h2>`,84);function c(u,b,g,m,y,B){const a=e,n=p,i=l;return k(),r("div",null,[o,s(a,{readTime:"10",words:"2.6k"}),s(n),s(i)])}const q=t(d,[["render",c]]);export{C as __pageData,q as default};
